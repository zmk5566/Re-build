{"version":3,"sources":["src/HexCubeCoord.js","src/Vertex.js","src/HexGrid.js"],"names":["HexCubeCoord","exports","q","r","s","_classCallCheck","worldPosition","subsquad_list","_createClass","key","value","factor","world_position","Array","Math","sqrt","_defineProperty","center","cube_direction_vectors","CubeDirection","direction","CubeAdd","hex","dir","CubeNeighbor","CubeScale","CubeRing","radius","results","console","log","push","i","j","HexCoordList","result","_HexCubeCoord","require","_typeof","o","Symbol","iterator","constructor","prototype","_inherits","subClass","superClass","TypeError","Object","create","writable","configurable","defineProperty","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperties","target","props","length","descriptor","enumerable","_toPropertyKey","Constructor","protoProps","staticProps","instance","obj","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","Vertex","x","y","z","type","subquadlist","subquadid_list","MarchVertex","_Vertex","_super","layer","IsActive","_this","HexGrid","CellSize","vetex_hex","Vertex_hex","Hex","hexes"],"mappings":";;;;;;AEAA,ADAA,ICAA+G,ADAA3E,OCAA,GAAAC,GDAA,GAAAA,CCAA,MDAA;ACA2C,ADAG,SCAHC,ADAGA,QCAHC,ADAGA,CCAH,ADAG,sCCAHD,ADAGA,OCAH,ADAG,wBCAHE,ADAGA,MCAH,ADAG,uBCAHA,ADAGA,MCAH,ADAG,CCAHC,ADAGA,QCAH,ADAG,aCAHF,ADAGA,CCAH,ADAG,kBCAHA,ADAGA,CCAH,ADAG,gBCAHA,ADAGA,CCAH,ADAG,WCAHA,ADAGA,CCAH,ADAG,yBCAHC,ADAGA,MCAH,ADAG,ICAHD,ADAGA,CCAH,ADAG,CCAHG,ADAGA,WCAH,ADAG,KCAHF,ADAGA,MCAH,ADAG,ICAHD,ADAGA,CCAH,ADAG,KCAHC,ADAGA,MCAH,ADAG,CCAHG,ADAGA,SCAH,ADAG,qBCAHJ,ADAGA,CCAH,ADAG,KCAHD,ADAGA,OCAH,ADAG,CCAHC,ADAGA,CCAH,ADAG;ACAH,ADAG,SCAH0C,ADAGrC,UAAAC,QCAHqC,ADAG,EAAApC,ICAH,EAAAqC,IDAG,CCAH,aAAAnD,CAAA,ADAGc,MCAHd,CAAA,GAAAmD,ADAG,KCAH,CAAAC,MAAA,EAAApD,CAAA,IDAGc,MCAHuC,IDAG,MCAH,GAAAF,KAAA,CAAAnD,CAAA,GAAAqD,IDAGtC,MCAH,CAAAuC,EDAG,QCAH,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAlC,IDAGN,QCAH,ADAG,CAAAF,SAAA,GAAAK,MAAA,CAAAC,ICAHoC,EDAG,CAAAvC,OCAH,EAAAuC,CDAG,IAAAvC,KCAH,CAAAI,IDAG,CAAAP,GCAH,MDAG,GCAHK,CDAGN,KCAH,CAAAU,KDAG,IAAA1C,KCAH,ADAG,CCAHwE,CDAGrC,KCAH,EAAA0C,CDAG,EAAArC,QAAA,GCAH,CAAAmC,IDAGlC,MCAH,CAAA1C,GAAA,EDAG,CCAH4E,UAAA,EDAGrC,MAAA,CAAAI,cAAA,CAAAP,QAAA,iBAAAK,QAAA,gBAAAJ,UAAA,EAAAO,eAAA,CAAAR,QAAA,EAAAC,UAAA;ACAH,ADAG,SCAHtC,ADAG6C,aCAHmC,GDAGjD,CAAA,EAAAe,CAAA,ICAH,ADAGD,ECAHoC,UAAA,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","file":"HexGrid.ee257aab.js","sourceRoot":"..","sourcesContent":["//TODO:\r\n//创建六边形cube coordinate坐标\r\nexport class HexCubeCoord{\r\n    //一个六边形\r\n    static worldPosition;//世界坐标\r\n    constructor(q,r,s){\r\n        //六边形的HexCube坐标+它的世界坐标\r\n        this.q=q;\r\n        this.r=r;\r\n        this.s=s;\r\n        this.worldPosition=this.worldPosition(q,r,s);\r\n        this.subsquad_list=[];\r\n    };\r\n    worldPosition(q,r,s){\r\n        //这个六边形的中心点\r\n        var factor=2;\r\n        var world_position=new Array((q*Math.sqrt(3)/2)*factor, 0, (-r-(q/2))*factor);\r\n        //console.log(\"world position\",world_position[0],world_position[1],world_position[2]);\r\n        return world_position;\r\n    }\r\n}\r\nvar center=new HexCubeCoord(0,0,0);\r\n//六边形移动方向\r\nvar cube_direction_vectors=[\r\n    new HexCubeCoord(+1,0,-1),\r\n    new HexCubeCoord(+1,-1,0),\r\n    new HexCubeCoord(0,-1,+1),\r\n    new HexCubeCoord(-1,0,+1),\r\n    new HexCubeCoord(-1,+1,0),\r\n    new HexCubeCoord(0,+1,-1)\r\n];\r\n//返回一个方向\r\nfunction CubeDirection(direction){\r\n    return cube_direction_vectors[direction];\r\n}\r\n//定义Add方法\r\nfunction CubeAdd(hex,dir){\r\n    //console.log(dir.q,dir.r,dir.s);\r\n    return new HexCubeCoord(hex.q + dir.q, hex.r + dir.r, hex.s + dir.s);\r\n}\r\n//返回一个六边形HexCoord：按方向移动\r\nfunction CubeNeighbor(hex,direction){\r\n    return CubeAdd(hex,CubeDirection(direction));\r\n}\r\n//定义Scale方法\r\nfunction CubeScale(dir,factor){\r\n    return new HexCubeCoord(dir.q*factor,dir.r*factor,dir.s*factor);\r\n}\r\n//Single Ring\r\n//返回一个六边形list：一个半径为Radius的六边形环\r\nexport function CubeRing(center,radius){\r\n    var results=[];\r\n    if(radius==0){\r\n        console.log(\"radius is 0\");\r\n        results.push(new HexCubeCoord(0,0,0));\r\n    }\r\n    else{\r\n        //console.log(\"genterating single ring of radius \",radius);\r\n        // var hex=new HexCubeCoord(center.q + CubeScale(CubeDirection(4),radius).q, \r\n        // center.r + CubeScale(CubeDirection(4),radius).r, \r\n        // center.s + CubeScale(CubeDirection(4),radius).s);\r\n        var hex=CubeAdd(center,(CubeScale(CubeDirection(4),radius)));\r\n        for(let i=0;i<6;i++){\r\n            for(let j=0;j<radius;j++){\r\n                //console.log(\"world position\",hex.worldPosition[0],hex.worldPosition[1],hex.worldPosition[2]);\r\n                results.push(hex);\r\n                hex=CubeNeighbor(hex,i);\r\n            }\r\n        }\r\n    }\r\n    //console.log(results.length);\r\n    return results;\r\n}\r\n//返回一个六边形list：一个半径为radius的六边形饼\r\nexport function HexCoordList(radius){\r\n    var result=[];\r\n    for(let i=0;i<=radius;i++){\r\n        result.push(CubeRing(center,i));\r\n    }\r\n    return result;\r\n}","import { HexCubeCoord } from \"./HexCubeCoord\";\r\nexport class Vertex{\r\n    subquadlist=[];\r\n    subquadid_list=[];\r\n    constructor(x,y,z,type) {\r\n        this.x=x;\r\n        this.y=y;\r\n        this.z=z;\r\n        this.type=type;\r\n        this.subquadlist=[];//不确定，最好别用\r\n        this.subquadid_list=[];\r\n      }\r\n}\r\n\r\nexport class MarchVertex extends Vertex{\r\n    constructor(x,y,z,type,layer,IsActive){\r\n      super(x,y,z,type);\r\n      this.layer=layer;\r\n      this.IsActive=IsActive;\r\n    }\r\n}\r\n","import {Vertex_hex,Hex} from './Vertex.js';\r\nexport class HexGrid{\r\n    hexes=[];\r\n    constructor(radius,CellSize){\r\n        this.radius=radius;\r\n        this.CellSize=CellSize;\r\n        var vetex_hex=new Vertex_hex();\r\n        Hex(this.hexes);\r\n    }\r\n}"]}