{"version":3,"sources":["src/HexCubeCoord.js","src/Edge.js","node_modules/three/build/three.module.js","src/Vertex.js","src/Quad.js","src/SubQuad.js","src/Triangle.js"],"names":["HexCubeCoord","exports","q","r","s","_classCallCheck","worldPosition","subsquad_list","_createClass","key","value","factor","world_position","Array","Math","sqrt","_defineProperty","center","cube_direction_vectors","CubeDirection","direction","CubeAdd","hex","dir","CubeNeighbor","CubeScale","CubeRing","radius","results","console","log","push","i","j","HexCoordList","result","Edge","va","vb","AllEdges","newEdge","Set","add","IsEdgeExist","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","warn","denormalize","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","freeze","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","toComponents","source","Color","_Symbol$iterator2","isColor","setRGB","setHex","setStyle","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","toString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","concat","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","toJSON","_context3","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","isTexture","_assertThisInitialized","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","_Symbol$iterator3","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_context4","WebGLRenderTarget","_EventDispatcher2","_super2","_this3","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator4","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context5","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator5","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","_context6","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix$1","_quaternion$3","Euler","_Symbol$iterator6","DefaultOrder","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context7","toVector3","error","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DefaultMatrixWorldAutoUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","isFrontFacing","d4","vc","d5","d6","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","_BufferGeometry","_super23","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","_this$children","_slicedToArray","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","err","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","cameras","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","_iterator2","_step2","inputjoint","jointPose","getJointPose","jointName","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","prepare","getProgram","material2","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","_Mesh2","_super47","_this38","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CanvasTexture","_Texture9","_super57","_this48","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super58","_this49","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super59","aRadius","_this50","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super60","_this51","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super61","_this52","v3","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super62","_this53","isCubicBezierCurve3","LineCurve","_Curve5","_super63","_this54","isLineCurve","LineCurve3","_Curve6","_super64","_this55","isLineCurve3","QuadraticBezierCurve","_Curve7","_super65","_this56","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super66","_this57","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super67","_this58","isSplineCurve","Curves","CurvePath","_Curve10","_super68","_this59","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super69","_this60","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super70","_this61","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super71","_this62","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_super72","_this63","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_super73","_this64","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super74","_this65","PolyhedronGeometry","_BufferGeometry6","_super75","_this66","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super76","_this67","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super77","_this68","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super78","_this69","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super79","_this70","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super80","_this71","OctahedronGeometry","_PolyhedronGeometry3","_super81","_this72","RingGeometry","_BufferGeometry9","_super82","_this73","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super83","_this74","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super84","_this75","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super85","_this76","TorusGeometry","_BufferGeometry12","_super86","_this77","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_super87","_this78","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super88","_this79","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super89","_this80","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super90","_this81","RawShaderMaterial","_ShaderMaterial","_super91","_this82","_Material9","_super92","_this83","_MeshStandardMaterial","_super93","_this84","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_super94","_this85","_Material11","_super95","_this86","_Material12","_super96","_this87","_Material13","_super97","_this88","_Material14","_super98","_this89","_LineBasicMaterial","_super99","_this90","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super100","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super101","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super102","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super103","ColorKeyframeTrack","_KeyframeTrack2","_super104","NumberKeyframeTrack","_KeyframeTrack3","_super105","QuaternionLinearInterpolant","_Interpolant4","_super106","QuaternionKeyframeTrack","_KeyframeTrack4","_super107","StringKeyframeTrack","_KeyframeTrack5","_super108","VectorKeyframeTrack","_KeyframeTrack6","_super109","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","_super110","response","_this92","_wrapNativeSuper","FileLoader","_Loader","_super111","_this93","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super112","CompressedTextureLoader","_Loader3","_super113","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super114","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super115","urls","DataTextureLoader","_Loader6","_super116","texData","TextureLoader","_Loader7","_super117","Light","_Object3D11","_super118","_this94","HemisphereLight","_Light","_super119","_this95","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super120","_this96","isSpotLightShadow","SpotLight","_Light2","_super121","_this97","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super122","_this98","_cubeDirections","_cubeUps","PointLight","_Light3","_super123","_this99","DirectionalLightShadow","_LightShadow3","_super124","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_super125","_this101","AmbientLight","_Light5","_super126","_this102","RectAreaLight","_Light6","_super127","_this103","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super128","_this104","MaterialLoader","_Loader8","_super129","_this105","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super130","_this106","BufferGeometryLoader","_Loader9","_super131","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super132","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super133","_this107","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super134","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_super135","_this108","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super136","_this109","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super137","_this110","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super138","_this111","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super139","_this112","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super140","_this113","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super141","_this114","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super142","_this115","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super143","_this116","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super144","_this117","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super145","sphereSize","_this118","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super146","_this119","GridHelper","_LineSegments2","_super147","_this120","PolarGridHelper","_LineSegments3","_super148","_this121","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super149","_this122","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super150","_this123","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super151","_this124","Box3Helper","_LineSegments6","_super152","_this125","PlaneHelper","_Line3","_super153","_this126","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super154","_this127","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_super155","_this128","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ImmediateRenderObject","WebGLMultisampleRenderTarget","_WebGLRenderTarget5","_super156","_this129","DataTexture2DArray","_DataArrayTexture","_super157","DataTexture3D","_Data3DTexture","_super158","BoxBufferGeometry","_BoxGeometry","_super159","CapsuleBufferGeometry","_CapsuleGeometry","_super160","CircleBufferGeometry","_CircleGeometry","_super161","ConeBufferGeometry","_ConeGeometry","_super162","CylinderBufferGeometry","_CylinderGeometry2","_super163","DodecahedronBufferGeometry","_DodecahedronGeometry","_super164","ExtrudeBufferGeometry","_ExtrudeGeometry","_super165","IcosahedronBufferGeometry","_IcosahedronGeometry","_super166","LatheBufferGeometry","_LatheGeometry2","_super167","OctahedronBufferGeometry","_OctahedronGeometry","_super168","PlaneBufferGeometry","_PlaneGeometry","_super169","PolyhedronBufferGeometry","_PolyhedronGeometry5","_super170","RingBufferGeometry","_RingGeometry","_super171","ShapeBufferGeometry","_ShapeGeometry","_super172","SphereBufferGeometry","_SphereGeometry","_super173","TetrahedronBufferGeometry","_TetrahedronGeometry","_super174","TorusBufferGeometry","_TorusGeometry","_super175","TorusKnotBufferGeometry","_TorusKnotGeometry","_super176","TubeBufferGeometry","_TubeGeometry","_super177","revision","__THREE__","_HexCubeCoord","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","obj","Vertex","subquadlist","subquadid_list","MarchVertex","_Vertex","IsActive","CreateMarchVertex","AllVertexList","AllMarchVertexList","AllMarchVertexLayer_j","THREE","_interopRequireWildcard","_SubQuad","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","Quad","vd","mid_cd","mid_bc","mid_ab","mid_ad","squad_a","SubQuad","squad_b","squad_c","squad_d","squadlist","DrawQuad","quad","meshlist","SharedEdge","CheckEdge1","CheckNormal1","CheckEdge2","CheckNormal2","targetNormal","indices_pt1","indices_pt2","_Triangle","_Quad","VerAidx","VerBidx","VerCidx","VerDidx","MarchCube","MarchVertList_Top","MarchVertList_Bottom","CreateMarchCube","AllSquadList","AllMarchCubeList","AllMarchCubeLayer_j","NewCube","MapSubQuad4UI","TriangleList","QuadList","VertexList","MidList","CenterList","TriVetList","IsExist","NewVet","VetA","VetB","VetC","MidAB","MidBC","MidAC","mid_ac","Center","QuadVetList","QuadMidList","DrawSubQuad","IsLine","Smooth","SQuadList","SmoothSquad","includes","Squad","squad_center","vecA","vecB","vecC","vecD","rotationQuaternionMid1","rotationQuaternionCenter","rotationQuaternionMid2","mVertexList","VectorList","WhereIsVertex","idxs","ReOrderList","rotatedVector1","rotatedVector2","rotatedVector3","UpdateVertex","NewVertexVector","UpdateMid1","UpdateCenter","UpdateMid2","UpdateList","squadIdx","influencedSquad","_Edge","hexPan","triangleList","drawtri","edge","drawtri1","drawtri2","PanTriangleList","FindNeighbor","SelectTriangle","AllTriangles","Neighbors","NeighborsIdx","mTriangle","set1","set2","test_set","Merge","leftTriangle","NeighborsIds","StartIdx","SelectNeigborId","SelectNeighborTriangle","MergedQuad","CreateQuad","tri1","tri2","shared","isolated","vert1","vert2","idx2","DrawTriangle","tri"],"mappings":";;;;;;;AIAA,ADAA,ICAAkzK,ADAA9B,KCAA,GAAA+B,KDAA,GAAA9B,OAAA,QCAA,CAAAA,OAAA;AACA,ADD8C,ICC9C+B,KDD8C1tK,GCC9C,GAAA2rK,EDD8CluK,CAAA,ICC9C,kCDD8CuC,OAAA,wBAAArC,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAJ,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAE,MAAA,IAAAF,CAAA,CAAAuE,WAAA,KAAArE,MAAA,IAAAF,CAAA,KAAAE,MAAA,CAAAL,SAAA,qBAAAG,CAAA,KAAAuC,OAAA,CAAAvC,CAAA;ACCP,ADDO,SCCPkwK,ADDOzpJ,UAAA0nJ,QAAA,EAAAC,KCCP1uK,CAAA,IDDO,eAAA0uK,UCCP9hH,ADDO,OCCP,YDDO8hH,OCCPpxK,CAAA,EDDO,KCCPsvD,OAAA,IAAA3sD,CAAA,MDDO2D,CCCPgpD,OAAA,CDDO,WCCP4jH,wBAAA,YAAAA,CAAAxwK,CAAA,SDDOyuK,ECCPzuK,CAAA,GAAAC,CAAA,CDDO,CAAAE,CCCP7C,CAAA,KAAA0C,CAAA,CDDO,GAAAE,MAAA,CAAAmB,MAAA,CAAAqtK,UAAA,IAAAA,UAAA,CAAAvuK,SAAA,IAAA0E,WAAA,IAAAhH,KAAA,EAAA4wK,QAAA,EAAAvtK,QAAA,QAAAD,YAAA,aAAAf,MAAA,CAAAK,cAAA,CAAAkuK,QAAA,iBAAAvtK,QAAA,gBAAAwtK,UAAA,EAAAC,eAAA,CAAAF,QAAA,EAAAC,UAAA;ACCP,ADDO,SCCP4B,ADDO3B,gBAAAruK,CAAA,EAAA4B,CAAA,ICCPlC,ADDO2uK,CCCP,EAAArxK,CAAA,SAAAA,CAAA,CDDO,GCCP0C,ADDOE,CCCP,IAAAF,CAAA,ADDO,CCCPywK,ADDOzrK,UCCP,IDDO,GAAA9E,ECCPF,CAAA,GDDO,CAAAgF,WCCPhF,CAAA,EDDO,CAAAgrG,IAAA,cAAA2jE,ECCP3uK,CAAA,aDDOM,CAAA,EAAA4B,CAAA,IAAA5B,CAAA,CAAA2E,ECCPjF,CAAA,MDDO,GAAAkC,CAAA,CCCPwuK,OAAA,CDDOpwK,CCCPN,ADDO,CCCP,QAAAC,CAAA,EDDO0uK,CCCP6B,cDDO,CAAAlwK,CAAA,EAAA4B,CAAA,KCCP,CAAA5E,CAAA,OAAA2C,CAAA,IAAAA,CAAA,CAAA2jE,GAAA,CAAA5jE,CAAA,UAAAC,CAAA,CAAAwY,GAAA,CAAAzY,CAAA,OAAAI,CAAA,KAAA6E,SAAA,UAAAxE,CAAA,GAAAP,MAAA,CAAAK,cAAA,IAAAL,MAAA,CAAAywK,wBAAA,WAAA9vK,CAAA,IAAAb,CAAA,oBAAAa,CAAA,IAAAX,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAAsB,IAAA,CAAA3B,CAAA,EAAAa,CAAA,SAAA1B,CAAA,GAAAsB,CAAA,GAAAP,MAAA,CAAAywK,wBAAA,CAAA3wK,CAAA,EAAAa,CAAA,UAAA1B,CAAA,KAAAA,CAAA,CAAAsZ,GAAA,IAAAtZ,CAAA,CAAAuY,GAAA,IAAAxX,MAAA,CAAAK,cAAA,CAAAH,CAAA,EAAAS,CAAA,EAAA1B,CAAA,IAAAiB,CAAA,CAAAS,CAAA,IAAAb,CAAA,CAAAa,CAAA,YAAAT,CAAA,CAAAswK,OAAA,GAAA1wK,CAAA,EAAAC,CAAA,IAAAA,CAAA,CAAAyX,GAAA,CAAA1X,CAAA,EAAAI,CAAA,GAAAA,CAAA;AAAA,AEDvC,AHA8C,IGA9CmuK,KFCuC1rK,ADDOokB,QCCP3mB,AEDvC,CFCuC,EEDvCkuK,EHA8CI,KGA9C,EHA8C,QAAAC,mBCCPhsK,MDDO,CCCP,EDDOisK,sBCCPtuK,GDDO,GCCP,iBDDOuuK,MCCPvuK,MAAA,CAAAE,QAAA,ADDO,QAAAsuK,KCCP1uK,ADDO,CCCP,EDDO01C,eAAA,CCCP11C,ADDOsuK,CCCP,MDDO,GAAAtvK,MAAA,CCCPgB,CAAA,IDDOuuK,OCCPvuK,CAAA,iBDDO,QCCPE,ADDOyuK,MCCP,GDDO,CCCP3uK,CAAA,CAAAuE,ADDOmxC,WCCP,IDDO,CCCPx1C,MAAA,ADDOqE,ICCPvE,CAAA,KAAAE,CDDO,EAAAlB,GCCP,CAAAa,EDDO,GAAA+uK,ICCP,GDDO,CAAAC,SAAA,CAAAH,KAAA,ECCP1uK,ADDOgV,CCCP,KAAAzS,GDDO,EAAAosK,ECCP,CAAA3uK,CAAA,KDDO,YAAAhB,MAAA,GAAA0vK,KAAA,CAAAv7E,KAAA,OAAAn+E,SAAA,YAAA85J,0BAAA,OAAA9vK,MAAA;ACCP,ACDvC,ACCA,AHD8C,IEA9C+wK,ACCA8F,KFAuC9vK,ACDvC,ACCA,AHD8C+oK,GEA9CkB,ACCA9B,OAAA,QFAuCloK,MAAA,EAAAC,ACDvC,CAAAioK,AFA8C17D,ICCP,ADDO,EAAAnxG,CEA9C,GFA8C,OCCPxC,CAAA,ADDOwC,IAAA,ECCPxC,CAAA,EDDO0D,CCCP0D,KAAA,CAAA7B,ADDO,CAAA/C,IAAA,CCCP,EAAAxC,CAAA,UAAAqH,UAAA,CDDO7E,ECCP4E,EDDO,GCCP,CAAApH,CAAA,GAAAqH,UAAA,CAAAxF,QDDOW,ECCP,EDDO,CCCP6E,UAAA,CAAAxF,CDDOW,IAAA,KCCP,WAAA6E,SDDO5C,CCCP,CAAA3C,ODDO,KCCP,wBAAAuF,UAAA,EAAAA,UAAA,CAAAtF,QAAA,SAAAhB,EDDO4nB,ICCP,CAAAvnB,cAAA,CAAA+F,EDDO,CAAAwsG,GCCP,CDDO,CCCPrsG,cAAA,CAAAD,UAAA,CAAA5I,GAAA,GAAA4I,UAAA;AHDvC,AGCuC,ACAvC,ACCA,AHF8C,IEC9CupK,ACCAQ,KFDuC5yK,ADDOmqB,EEC9C,CCCA,EDDA0mJ,CCCAA,MDDA,CDAuCpoK,AECvC,UHF8C0sG,CCCP,EAAApsG,CDDO,QAAAosG,CCCP,EAAAnsG,CDDO,UCCP,QAAAD,ODDO2oK,GCCP,EAAAhpK,SDDO,QCCP,CAAAD,WAAA,CAAAjG,SAAA,EAAAuG,UAAA,OAAAC,WAAA,EAAAN,UDDOysG,IAAA,GCCP,CAAA1sG,WAAA,EAAAO,WAAA,GAAAzG,MAAA,CAAAK,cAAA,CAAA6F,WAAA,iBAAAlF,QAAA,mBAAAkF,WAAA;AHDvC,AGCuC,ACCvC,ACEA,AHJ8C,IFCjC7G,AICb4yK,ACEA9B,ILHiB,CGAsB7yK,AEGvC,AHJ8CsxK,EFC7B1xK,CKGjBkzK,CDFA,GAAA9B,EJDiB,CAAAjvK,IAAA,AICjB,EDDuC4G,QAAA,EAAAC,AEGvC,AHJ8C,CGI9CooK,GLHiB7wK,IKGjB,GFHuC,IDDOuxK,CFC7B,CACb,IGDmC/oK,CDDO,IFE1C5G,GGDmC,EHCvBC,EAAE,EAACC,EAAE,EAACC,EGDiB0G,EDDO8oK,IFEhB,EAAC,CEFe,CAAAC,CCCP,QDDO,OCCPvrK,SAAA,IDDOsrK,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAArvK,SAAA,CAAAsvK,OAAA,CAAA9tK,IAAA,CAAAutK,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAxvK,CAAA;AHA9C,AICuC,ACEvC,ACEA,AHL8C,EFEfxC,EIC/B40K,ACEAA,KFJuCj0K,ACEvC,ACEA,AHL8C63C,GEG9Cw4H,ACEAA,KLH+B,EIC/B,ACEA,KLH+BjvK,CGDQmwK,ADDOpvK,CAAA,EFEf,AGDQ,EAAA1C,ADDOo4C,GCCP,EAAAn4C,KAAA,IAAAD,CDDO,ECCP,CDDOsC,ECCPuG,IDDO,CAAAzB,SCCP,CAAApH,GAAA,CDDO,GAAAsC,GCCPtC,GAAA,ADDO,CAAAwE,GCCPstK,GAAA,IAAAxvK,IDDO,CAAA8qG,CCCP,CAAAzqG,EDDO,YCCP,CAAAmvK,CDDO15H,ECCP,EAAAp4C,GAAA,IAAAC,KAAA,ADDOyC,CAAA,CCCPzC,KAAA,EAAAmD,GDDOV,CAAA,CAAA2E,KCCP,IDDO,ICCPhE,ADDOf,MAAA,CAAAkC,KCCP,QAAAlB,CDDO,CAAAZ,CAAA,KCCP,QDDO01C,YCCP05H,GAAA,ADDO,CCCP9xK,ADDO0C,CAAA,ECCP,IAAAzC,KAAA,WAAA6xK,GAAA;AJAvC,AIAuC,ACET,ACEG,AHLa,EFGtC,IAAI,CAAClwK,EAAE,AGFwBiH,ACET+pK,ACEGA,AHLanqK,GFG9B7G,EAAE,UGFqBkC,GAAA,ADDO4E,MAAA,CEGhBtG,ACEGA,CFJMpC,ACET,ACEG,AHLa2I,GCCP,EDDO,CCCPK,YAAA,ADDOzH,CCCPuC,ADDO,GCCP,GDDOvC,CAAA,GEGhBytD,ACEGA,AHLarmD,KAAA,CAAA7B,CEGhB,ACEG,KHLa,CCCP7B,CDDO1D,CAAA,KCCP,CAAAvB,GAAA,CDDO4I,CEGhBlJ,ACEGA,CDFH,ACEG,ODFHsvD,ACEGA,CHLa,GAAArmD,GCCP3I,ACET,ACEG,EHLa,CCCP,ADDOuB,CEGhBc,ACEGA,AHLa,CEGhB,ACEG,CFJM4G,CDDOL,KCCP,ACETomD,ACEGA,CFJMhvD,GAAA,CDDO,CAAAoD,CEGhB,ACEG,SHLa,GEGhBwvK,ACEGA,AHLahqK,UAAA,CAAAxF,UAAA,GEGhB,ACEG,QHLawF,IEGhBgqK,ACEGA,CDFHxwK,ACEGA,CDFH,ACEG,IHLa,CAAAiB,MEGhBjB,ACEGA,CDFH,ACEG,GDFHC,ACEGA,CDFH,ACEG,CHLa,EEGhB3C,ACEGA,CDFH,ACEG,KDFH0C,ACEGA,CDFH,ACEG,eHLawG,UAAA,EAAAA,UAAA,CAAAtF,QAAA,SAAAhB,MAAA,CAAAK,cAAA,CAAA+F,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA5I,GAAA,GAAA4I,UAAA;AHC9C,AIAuC,ACET,ACEG,AHLa,EFItC,EDFKrJ,ECED,CAACsC,EAAE,AGHwBmH,ACET0pK,ACEGA,AHLa3yK,GFI9B8B,EAAE,EDFO,GAAArC,GIDc0J,ADDOV,IHErB,CAAAjJ,AIDc,EAAA4J,IAAA,ACET/G,ACEGA,AHLa,CEGhB,ACEG,CHLa0G,CEGhBpJ,ACEGA,CDFH,ACEG,ENHR,EIDcuF,IDDO,CEGhBvF,ACEGA,CDFH,ACEG,AHLaqJ,CCCP,CAAAG,ECET9G,ACEGA,CDFH,ACEG,EFJM,ECETA,ACEGA,CDFH,ACEG,CDFHywK,ACEGA,AHLa,QAAA/pK,EEGhB,ACEG,IFJMI,IDDO,CCCP,ACET9G,ACEGA,CDFH,ACEG,AHLaqG,eEGhBrG,ACEGA,CDFH,ACEG,CFJM8G,ADDO,CAAAV,ICCP,MAAAY,CDDO,CAAA7G,ECCP,GAAA2G,ICET9G,ACEGA,AHLa,CCCP,ACET,ACEG,CFJMQ,ADDOkG,MCCP,CAAAO,GDDO,OAAAN,CCCP,MCET3G,ACEGA,CFJMgH,ACET,ACEG,GHLa,CCCP,CDDOX,ICCPa,ECETwpK,ACEGA,OFJM,ACET,ACEG,EDFH1wK,ACEGA,CDFH,ACEG,CHLa,CAAAoG,GCCPe,GAAA,ACETlH,ACEGA,CDFH,ACEG,EFJM+G,CCETwpK,ACEGA,CHLa,ECCP,ADDO7pK,CCCPhF,IAAA,CAAAmF,KAAA,ADDO,ECCPC,CDDO7G,GCCP,GDDO,CEGhB,ACEG,AHLaK,CEGhBjD,ACEGA,CDFH,ACEG,ODFH2C,ACEGA,CDFH,ACEG,IDFHA,ACEGA,AHLa,CEGhB,ACEG,AHLamG,CCCPvD,ACET+gE,ACEGA,GDFH,ACEG,CDFH5jE,ACEGA,CDFH,ACEG,EFJM,CAAAmH,EDDO,CCCP,ICETlH,ACEGA,CDFH,ACEG,CDFHwY,ACEGA,GDFH,ACEG,CDFHzY,ACEGA,CDFH,ACEG,KHLakB,EEGhBd,ACEGA,CDFH,ACEG,IFJM+G,CCETlC,ACEGA,AHLa,ECCP,OCET,ACEG,KFJMrB,KCETnD,ACEGA,AHLa2F,CEGhB,ACEG,GFJM,ACETlG,ACEGA,MDFH,ACEG,CDFHK,ACEGA,AHLa,cEGhB,ACEG,IDFHL,ACEGA,MDFH,ACEG,CDFHywK,ACEGA,wBDFH,ACEG,IFJM5pK,IAAA,GCETlG,ACEGA,CDFH,ACEG,IDFHb,ACEGA,CDFH,ACEG,OFJM6G,MAAA,GAAAO,ICETvG,ACEGA,CDFH,ACEG,CFJM,EAAAiG,CCET5G,ACEGA,IFJM,ECET,ACEG,CDFHC,ACEGA,SDFH,ACEG,CDFHE,ACEGA,cDFH,ACEG,CDFHsB,ACEGA,IDFH,ACEG,CDFH3B,ACEGA,CDFH,ACEG,EDFHa,ACEGA,CDFH,ACEG,SDFH1B,ACEGA,CDFH,ACEG,GDFHsB,ACEGA,CDFH,ACEG,GDFHP,ACEGA,MDFH,ACEG,CDFHywK,ACEGA,wBDFH,ACEG,CDFH3wK,ACEGA,CDFH,ACEG,EDFHa,ACEGA,CDFH,ACEG,UDFH1B,ACEGA,CDFH,ACEG,KDFHA,ACEGA,CDFH,ACEG,CDFHsZ,ACEGA,GDFH,ACEG,IDFHtZ,ACEGA,CDFH,ACEG,CDFHuY,ACEGA,GDFH,ACEG,IDFHxX,ACEGA,MDFH,ACEG,CDFHK,ACEGA,cDFH,ACEG,CDFHH,ACEGA,CDFH,ACEG,EDFHS,ACEGA,CDFH,ACEG,EDFH1B,ACEGA,CDFH,ACEG,IDFHiB,ACEGA,CDFH,ACEG,CDFHS,ACEGA,CDFH,ACEG,IDFHb,ACEGA,CDFH,ACEG,CDFHa,ACEGA,CDFH,ACEG,YDFHT,ACEGA,CDFH,ACEG,CDFHswK,ACEGA,ODFH,ACEG,GDFH1wK,ACEGA,CDFH,ACEG,EDFHC,ACEGA,CDFH,ACEG,IDFHA,ACEGA,CDFH,ACEG,CDFHyX,ACEGA,GDFH,ACEG,CDFH1X,ACEGA,CDFH,ACEG,EDFHI,ACEGA,CDFH,ACEG,GDFHA,ACEGA,CDFH,ACEG;AFJM,ACET,ACEG,AHLa,EFKtC,ADDiB,EIFZwwK,IAAI,CCCa/tK,ACEGA,AHLarF,ECE7BJ,MCCakD,ACEGA,CFHhB,ACCa,ACEG,CFHhBswK,IAAA,EDF6BzqK,QAAA,EAAAC,ICE7BzI,ODF6B,KCE7B,CAEb,ICD0BkF,ACEGA,AHLasD,KCI1CyqK,ECD0B,ACEG,CHLa,ECI9BpxK,EAAE,EAACC,EAAE,EAACiuC,EAAE,ADJsBtnC,ECIrByqK,EAAE,EAAC,KCDErwK,ACEGA,AHLa,MEGhB,ACEG,SHLaoD,SAAA,KEGhBpD,ACEGA,MDFH,ACEG,CDFHE,ACEGA,QDFH,ACEG,aDFHJ,ACEGA,CDFH,ACEG,kBDFHA,ACEGA,CDFH,ACEG,gBDFHA,ACEGA,CDFH,ACEG,WDFHA,ACEGA,CDFH,ACEG,yBDFHE,ACEGA,MDFH,ACEG,IDFHF,ACEGA,CDFH,ACEG,CDFHuE,ACEGA,WDFH,ACEG,KDFHrE,ACEGA,MDFH,ACEG,IDFHF,ACEGA,CDFH,ACEG,KDFHE,ACEGA,MDFH,ACEG,CDFHL,ACEGA,SDFH,ACEG,qBDFHG,ACEGA,CDFH,ACEG,KDFHuC,ACEGA,ODFH,ACEG,CDFHvC,ACEGA,CDFH,ACEG;ADFH,ACEG,AHLa,EFMtC,ADDJ,AIDwB9C,IHEdmC,GIHgBonB,ACEG1gB,AHLalI,EHK1ChB,ECCiB,GAAG,CGFI,ECDEsxK,CJGF7uK,GAAG,CAAC,ADDhBvC,AIDYuzK,CHEK,ADDhB,AGL6BlB,EHK5BpyK,AKFY,ACEGgJ,CNAd,AIDS,ADJkB,CEGhBooK,CLEVnxK,AGL0BK,CHKzB,EAAC,AMAW,AHLa,EGKb2I,AHLa1I,IEGhB,CCEG,AHLa,IAAAD,GAAA,GAAA6I,GGKbtH,CDFHuvK,ACEG,MAAAvvK,CAAA,GDFH,ACEGoH,AHLa,CAAA3I,GAAA,CGKb,CAAA8G,KHLa9G,CGKb,EAAAuB,AHLa,CGKb,GHLauwK,CEGhBhB,EFHgB,IGKbloK,AHLatG,IEGhB,EFHgB,CAAAK,GGKb,GAAAgG,KAAA,CAAApH,CAAA,CHLa,CAAAuwK,CGKblpK,EHLa,EEGhB5C,AFHgBhG,GAAA,GGKb,CAAAoD,AHLanD,EEGhB,GFHgB,EAAAA,GGKb,EHLa,CGKb2I,CHLaxF,SGKb,CAAAA,AHLa,QAAAC,EGKb,UHLa,CGKbuF,OHLatF,GGKb,CAAAD,IDFHwtK,AFHgB,QEGhB,ACEG,CDFHtuK,SAAA,EFHgBuvK,CEGhBxvK,EFHgB,CAAAtC,GEGhB,AFHgB,CEGhByD,GFHgBxD,CGKb2I,EDFH,CAAAkoK,CFHgB,MGKb,EAAAloK,CDFH,EFHgBkpK,EEGhBhB,CFHgB,IGKb,CAAAxtK,IDFH,CAAAf,GCEG,MDFH,GCEGD,CDFH2E,KCEG,CAAAtE,KDFH,IAAA1C,KAAA,ACEG,CAAAyI,CDFHmoK,KCEG,EAAAhoK,CDFH,EAAAvF,QAAA,GCEG,CAAAsF,IDFHvF,MCEG,CAAArD,GAAA,EDFH,CCEG4I,UAAA,EDFHtG,MAAA,CAAAK,cAAA,CAAAkuK,QAAA,iBAAAvtK,QAAA,gBAAAwtK,UAAA,EAAAC,eAAA,CAAAF,QAAA,EAAAC,UAAA;AAAA,ACEG,AHLa,EFOtC,AGHoBvwK,EJCNX,KKFQmxK,ACEGhxK,AHLa8I,QCIlB,EJCN,GMAWL,EHLa1E,CEGhBpB,CLERnD,AKFQ,CFHgB,CEGhB+E,CAAA,IAAAysK,ACEG,EAAAjoK,AHLa9I,ECGhC,CJEQ,AGLwB,CCG9B,EDH8BgJ,IGKb,EAAAD,CDFH,GAAAzG,EFHgB,CAAAwB,GEGhB,AFHgB,CEGhBsD,ACEG,QAAA0B,MDFH,GAAAxG,CCEG,CHLa2C,CGKbwD,GDFH,CAAArB,EFHgB,CAAApH,GAAA,OGKb,CDFH,ACEGwI,CDFH4kG,IAAA,IFHgBptG,EGKb,CAAAuC,AHLa,GAAA0G,IEGhB8nK,ECEG,AHLa,CAAA/wK,CGKb8I,EHLa,QGKb,EDFHpG,CAAA,EAAA4B,CAAA,CCEGyE,GDFHrG,CAAA,CAAA2E,MCEG,EAAAoB,CDFH,GAAAnE,CAAA,SAAA5B,CAAA,ECEG,CAAA8F,SDFHuoK,ECEG,EAAAhoK,WDFH,ACEG,CDFHrG,CAAA,CCEGJ,CDFHgC,CAAA,ICEG,CAAA3B,cAAA,CAAA6F,WAAA,iBAAAlF,QAAA,mBAAAkF,WAAA;ADFH,ACEG,AHLa,EFQtCzG,AGHA,EJCA,EIDI,CAACH,EHGE,AGHA,ACFeynB,ACEGzpB,AHLaoJ,CFQ9B/G,EGHAL,CHGG,CAACA,AGHF,EHGI,CAAC,KILOovK,AFHgB9nK,GGKbX,EHLa,EEGhB,AFHgBY,IGKb,AHLa,EGKbX,EDFHyoK,IFHgBhsK,KGKb,EHLa,CAAAiE,KAAA,EGKbX,MDFH,ECEG,CDFH2oK,OFHgBhoK,IGKbV,CHLa,UGKb,GDFH,KFHgBU,KAAA,EGKblD,IHLaoD,IEGhB+nK,AFHgB,CGKb,EHLajoK,KAAA,CAAAtG,MAAA,CAAAyG,KEGhB,MFHgB,EEGhB+nK,KAAA,AFHgBhoK,GEGhBgvC,CFHgB,KAAA9uC,SEGhB,AFHgB,CEGhB0nK,OAAA,AFHgBznK,GEGhB7H,AFHgB,GAAA0H,GEGhB,CFHgB,CAAArF,IEGhBktK,AFHgB,CAAA/nK,KAAA,EAAAC,IAAA,aEGhB,OFHgBlE,CEGhBosK,MFHgB,CAAA9nK,EEGhB,CFHgB,EEGhB6uC,eAAA,MFHgB7uC,CEGhBtC,EFHgB,SEGhB,EAAAvF,CFHgBsE,KEGhB,GAAAsrK,CFHgB,MEGhB,CAAAC,SAAA,CAAAH,KAAA,EAAA15J,SAAA,EAAA25J,SAAA,YAAA3vK,IFHgByH,EEGhB,EFHgB,CEGhBioK,KAAA,CAAAv7E,KAAA,IFHgB5sF,GEGhByO,GFHgB,GAAAlO,GEGhB,GFHgB,EAAAN,KAAA,EEGhBsoK,0BAAA,OAAA9vK,MAAA;AAAA,ACEG,AHLa,EFStCK,AGHA,EJCA,AGNKgwK,ECKD,CAAClwK,CJCD,CCEG,ADFFpC,AIDE,ACHe+xK,ACEGjxK,CLIjB0B,ADFF,AGNK,ECKHJ,CHGG,ADFJpC,AGNID,CFQCqC,ADFJ,AIDE,EHGI,CAAC,GERJ,CAAAkwK,IGIcD,EHJd,CGIc,EAAA9xK,GAAA,EAAAC,CDFHi1G,IAAA,ACEG,EDFHnxG,CFFXhE,CGIcC,EDFH,CCEG,GAAA6I,IDFH9E,CFFX,CAGf,EED0B,KAAAkB,CCEG,CAAAjF,AHD7B+xK,GGC6B,EDFH,CAAAhuK,CFCd+S,CAAC,EEDa,ACEG9W,AHDfmE,CAAC,EGCc,AHDbynB,CAAC,EAAC/nB,CGCWiuK,GAAA,AHDP,EAAE,EGCKxvK,MAAA,CAAAK,IDFHoB,IAAA,MCEG,CAAA+tK,GAAA,EAAA9xK,GAAA,IAAAC,KAAA,EAAAA,CDFH8D,IAAA,ACEG,EAAAX,UAAA,CDFHW,IAAA,GCEGV,YAAA,QAAAC,EDFH0C,MCEG,GDFH,iBCEG8rK,GAAA,CAAA9xK,GAAA,IAAAC,KAAA,WAAA6xK,GAAA,wBDFH5nJ,sBAAA,CAAAgrF,IAAA;AAAA,ACEG,ELKzBpzG,AGHA,ADHoBlC,EHIpB,EIDI,CAACkwC,CJCD,CAACpwC,AIDE,ACJewqB,ACEGrhB,CLKjB,ADFF,CCEGvH,CGHDwuC,CJCDpwC,CAAC,AIDE,CHGG,CAAC,CENM,GFMF,CAAC,GKLMoE,AHDLiuK,GGCK,GHDL,EEDE78D,GCEGl1G,CDFH,ECEG,GAAAgJ,GDFHksG,IAAA,KCEG,CAAApxG,GAAA,gBDFH2tK,ICEGxsK,OAAA,CAAAjF,EDFH,CCEG,iBAAAA,GAAA,GAAAiJ,MAAA,CAAAjJ,GAAA,sCDFHk1G,IAAA;AJQ1B,AIR0B,ACEG,CLM5B,CGHG,ADJoB30G,EHKpB,EIDI,CAAC0yK,CJCD,CAACtzK,AIDE,ACLeuxK,ACEGloK,CNInB,EIDEiqK,CJCDtzK,CAAC,AIDE,GDJU,KGCKuJ,KAAA,EAAAC,IAAA,EDFH,IFDd,EGGiBlE,AHHf,OGGe,CAAAiE,CDFHooK,ICEG,GDFH,eCEGpoK,KAAA,CDFHooK,OAAA,CAAAC,SAAA,ACEGroK,KAAA,MAAAE,IAAA,GAAAF,EDFHooK,GCEG,CAAA1uK,GDFH,CAAA2uK,ECEG,CAAAloK,MDFH,CAAAqoK,IAAA,ACEG,OAAAtoK,IAAA,KAAAE,SAAA,EDFHqoK,KAAA,CCEGpoK,GAAA,GAAAH,IAAA,CAAArF,IAAA,CAAAmF,KAAA,EAAAC,IAAA,QDFHyoK,OAAA,CAAArvK,ICEG0C,KDFH,CAAA4sK,CCEG,CAAAtoK,GAAA,EDFH,CAAAxF,IAAA,CAAAutK,OAAA,CAAAC,OCEGhoK,EDFH,CAAAqoK,ACEG,ODFH,KCEG5rK,SAAA,gCDFH5D,CAAA,2BCEG+G,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA,KAFjC;ALUO,AIVuB,ACA9B,EFMQ,ADPU3I,EHQV,AMJKquC,EFGD,CAACskI,CJCD,CCGIhxK,ADHHrC,AKPiBu4C,GCGT,CFGF,EEHE54C,CFGD,CAAC,ADPH,CCOIyzK,EHIK/wK,AGJH,CHIIN,AGJH,CJCC,AIDA,AEHL,CLOS,AGJH,AEHNgtC,ELOU/sC,ADHJ,AKPGa,CDMFotC,ACNE,CJUG,CGJH,CHIIhuC,ADHH,AIDA,CJCCjC,AIDA,ACNFu4C,CDMG,AEHZ,IFGc,CAAC,CHIM,CGJL,CHIM,AGJL66H,EAAE,CAAC,ADNtB,CHO0B,AIDH,CJCIxzK,AIDH,ADNtB,CHO0B,AKPjB,ELOkBC,AIDJowC,AEHvB/vC,CNI4B,AKPnBuC,CDMgB,CJCI3C,AIDH,CJCI,AIDH,CJCI,AIDH,ECNnB,CAAAyH,CDMqB,CAAC,EAAC,AEHhC,CFGiC6rK,AEDlD,EFCoD,CAAC,CAAC,CAAC,GAACnjI,CCN9B,ACK1BlB,CFC0D,CAAC,CAAC,ACNlCtsC,CDMmC,IAAE,CAAC,ACNtC,ACKdV,CFCqD,ACNvC4C,CCKZ,EAAC3C,EAAE,EAACiuC,EAAE,EAAC,GDLK,CAAAs9D,IAAA,cAAAh1D,gBAAA11C,CAAA,WAAAA,CAAA,CAAA2E,SAAA,IAAA/E,MAAA,CAAAkC,cAAA,CAAA9B,CAAA,aAAA01C,eAAA,CAAA11C,CAAA;AAAA,EJW1B,AGJI,AEFiB9C,AHHjB,EHMA,EIDI,ADLA,CCKCuzK,ADLAr8J,CHMD,AGNE,CHMDhX,AKRiBS,EFEfuW,CAAC,CCKG,GAAC,CAAC,AEFI,CFEHjV,EAAE,CAAC,CJCC,AIDA,CAAC,CEFF+sC,CNGE,AKRGkjI,CDOFhiI,CJCC,CIDC,ACPA,CDOC,CAAC,ACPF9vC,CDOG,CEFR,CDLK,EDOK,ACPLC,CDOM,EAAC,CAAC4B,CCPR,CDOU,CAAC,CAAC,CAAC,ACPb7B,GDOc8vC,ACPd,EDOgB,CAAC,ACPjBjnC,CDOkB,CAAC,IAAE,CAAC,EAAC,CAAChH,EAAE,CAAC,CAAC,ACP5B,CDO6B,ACP7B7B,GDO8B8vC,ACP9B,EDOgC,CAAC,CAAC,CAAC,ECPnC9vC,EDOqC,CAAC,ACPtC,CDOuC,GCPvC8xK,GAAA,IAAAxvK,MAAA,CAAAK,cAAA,CAAAmvK,GAAA,EAAA9xK,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAmD,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAwuK,GAAA,CAAA9xK,GAAA,IAAAC,KAAA,WAAA6xK,GAAA;AAAA,EJY1B,ADHA,AIDI,AEHiBvxK,AHFjB,ICKI,ADLA,CCKC6yK,ADLAjvK,CAAC,CEHgBsE,EFGftE,CAAC,CCKG,GAAC,CAAC,AEHI,CFGHvC,EAAE,CAAC,CAAC,CAAC,GAACC,CCRE6G,CDQA,CAAC,CAAC,CAAC,ECRH,EDQK,ACRLC,CDQM,CEJtB,CFIuB,CAAC/G,AEJtB,CDJc,CDQU,CAAC,CAAC,CAAC,GAACC,EAAE,CAAC,CAAC,CAAC,CCRnBN,CAAA,EDQqB,CAAC,EAAC,CAACK,ACRxBL,CAAA,CDQ0B,CAAC,CAAC,ACR5BoH,CDQ6B,GAAC9G,CCR9B,CDQgC,ACRhCiF,CDQiC,CAAC,CAAC,GCRnC,CDQqC,CAAC,ACRtCvF,CDQuC,ACRvC,UAAAqH,UAAA,GAAAD,KAAA,CAAApH,CAAA,GAAAqH,UAAA,CAAAxF,UAAA,GAAAwF,UAAA,CAAAxF,UAAA,WAAAwF,UAAA,CAAAvF,YAAA,wBAAAuF,UAAA,EAAAA,UAAA,CAAAtF,QAAA,SAAAhB,MAAA,CAAAK,cAAA,CAAA+F,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA5I,GAAA,GAAA4I,UAAA;AAAA,EJa1B,ADJC7I,AIAG,AEHA,AHFA,ICKI,AEHA,AHFA,CCKCszK,AEHAzxK,AHFAgqB,CAAC,CEJgB7rB,ACMf,EHFA6rB,CGEChqB,AHFA,CCKG,CJAd,AMHa,CNGbrC,CIAe,CAAC,CAACqC,EAAE,CAAC,CAAC,ACTI4G,CDSH,GAACyqK,CJAvB,CIAyB,CAAC,CAAC,CAAC,ECTH,EDSK,ACTLnqK,CDSM,EAAC,CAAClH,EAAE,CAAC,CAAC,CAAC,CCTb,EDScqxK,ACTdlqK,EDSgB,CAAC,CAAC,CAAC,IAAE,CAAC,CCTtB,CDSuB,CAACnH,EAAE,CAAC,CAAC,CAAC,CCT7BkH,EDS8BmqK,EAAE,CAAC,CAAC,CAAC,GCTnC,CDSqC,CAAC,ACTtCxqK,CDSuC,gBCTvC,CAAAD,WAAA,CAAAjG,SAAA,EAAAuG,UAAA,OAAAC,WAAA,EAAAN,iBAAA,CAAAD,WAAA,EAAAO,WAAA,GAAAzG,MAAA,CAAAK,cAAA,CAAA6F,WAAA,iBAAAlF,QAAA,mBAAAkF,WAAA;AAAA,EJc1B,AGJI,AEHA,AHFA,EHIHxI,EICO,AEHA,AHFA,CHIP,AICQQ,AEHAqB,AHFAgC,EELiBgF,ACOf,EHFE,CGEDhH,CFGG,CEHD,AHFAgC,ECKE,CAAC,CAAC,ADLA,ICKI,CAACuvK,CCVGtvK,GAAA,EDUG,CAAC,CAAC,CAAC,GAAC,ACVP9D,GAAA,CDUW,CAACkzK,CCVZlqK,KDUkB,CAAC,CAAC,CAAC,IAAE,ACVvB,CDUwB,ACVxBlF,EDUyB,CAAC,ACV1B,IDU8B,CAACsvK,MAAM,CAAC,CAAC,CAAC,GAAC,GCVzCnuK,CDU6C,CAACiuK,KCV9C,CDUoD,ACVpDlzK,CDUqD,CAAC,CAAC,ACVvD,IDUyD,CAAC,EAAC,CAAC,IAAI,CAACozK,ICVjEpzK,EDUuE,CAAC,ACVxE,CDUyE,CAAC,CCV1EiJ,EDU2E,IAAI,ACV/E,CDUgFiqK,ACVhFlzK,GAAA,GDUsF,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC;ACV7F,EJe1B,AGJI,AEHA,AHFA,EHGHC,EIEOqzK,AEHA,AHFA,CGECxjI,AHFAkiI,EHGR,AKTyBhpK,ACQf,ENEX,CMFY8mC,CFGG,CEHD,EFGE,EDLI,EHIpBjwC,AICoB0zK,CDLC,CENKrqK,CFMH,CAAC,GENE,EAAAC,IAAA,CLUZ1J,CAAC,CICY,CJDXC,AICY,CJDX,EAACC,CAAC,AICa,ACXNsF,CDWOrD,CJDb,CICe,EAAC,ECXV,CAAAsH,CDWc,CAACkqK,GCXf,GDWqB,EAAC,IAAI,CAAC5yK,MAAM,EAAC,ACXlC0I,IDWsC,CAACmqK,ACXvC,MDW6C,CAAC,WCX9CnqK,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAtG,MAAA,CAAAyG,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAArF,IAAA,CAAAmF,KAAA,EAAAC,IAAA,oBAAAlE,OAAA,CAAAsE,GAAA,uBAAAA,GAAA,YAAAvD,SAAA,4DAAAmD,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,EJgB1B,AGJI,AEHA,AHFA,IHIA,AICIsqK,AEHA,AHFA,CGEC4C,AHFAnE,EEPiBryK,IDYX,AEHA,GFGC,AEHA,CAAC,CAACgC,EFGE2xK,AEHA,CAAC,AHFE,CGED,CAAC,CHFC,CEPEhrK,CCSFunC,AHFE,EGEA,CAAC,CAAC,CAAC,EDTH,EAAAtnC,ACSK,CFGJ,AEHK,CFGJ,CEHK,CAAC5G,EFGF,AEHI,CFGHC,AEHI,CAAC,CFGH,AEHI,EFGH,ACZV,CCSciuC,EAAE,CFGF,AEHG,CFGFqjI,AEHG,CAAC,IDTnB5qK,ACSqB,CFGA,AEHC,EFGA,AEHC,CAAC3G,EAAE,CFGA,AEHC,CFGApB,ACZ3B,ACS4B,CAAC,GAACsvC,EFGG,AEHD,CAAC,CFGC,AEHA,CAAC,GFGG,ACZtCtnC,CDYuC4qK,AEHF,CAAC,CAAC,IFGM,CAAC,GCZ9C,eAAAptK,SAAA;AAAA,AFQxB,CAAC,CFSH,AGJI,AEHA,EDTKutK,ELWL,AICIE,AEHA,CAACL,GNEDlzK,CKXQ,EDYD,AEHA,CDTCV,ELWF,AICE,AEHA,CAAC,CAACoC,CNEH,CAAC,AICI2xK,AEHA,CDTJ,ACSK,CDTLA,ACSM,CAAC,GAAC1xK,EAAE,CDTV,ACSW,CAAC,CAAC,IAAE,CFGJ,AEHK,CFGJ,CEHK,CAACD,EFGF,AEHI,CFGHkuC,AEHI,CAAC,CFGH,AEHI,CDTvB/vC,CDYoB,CEHI8B,EAAE,CFGF,AEHG,CFGFqxK,AEHG,CAAC,IAAE,CFGA,ACZ/B,ACSgC,CDRhD,CDWgD,AEHC,CAACtxK,EAAE,CFGA,AEHC,CFGApB,AEHC,CAAC,EDRvD+yK,CCQwD1xK,EFGG,AEHD,CAAC,CFGC,AEHA,CAAC,EDRjDD,CDWoD,CAACuxK,ACXnD,ACQiD,CAAC,CDRjDtxK,ACQkD,EDRhD,EDWsD,ACXrDiuC,CDWsD,CCXpD,EAACmjI,EAAE,EAAC;AFMrB,EFUH,AGJI,ACZoBrzK,ACSpB,EHAKsyK,EHEL,AICIwB,AEHA,CAACP,ELOF,CDLChzK,GCKG,AGJI,AEHA,EHAK,CCGJ,AEHA,CDTQ,ACSP,CAAC0B,AHAErC,ECGA+zK,AEHA,CAAC,CAAC,CAAC,CNED,AKXEA,CFSJ,CGAIzjI,AHAJoiI,CHEG,CMFG,CAAC,CAAC,CNED9xK,AKXH,ACSK,IAAE,CNEC,AICL,AEHK,CNEEX,AICN,ADHR,CHEe,AMFF,CAACoC,ENEExB,AICJ,AEHI,CFGH4yK,AEHI,CAAC,CFGH,AEHI,CNEC,CAAC3yK,AICL,CEHIwvC,EAAE,CNEG,AICL,AEHG,CNEG,AICLujI,AEHG,CNEG,AMFF,CNEG,GAAC,AMFF,CNEG,AICH,AEHC,EFGA,AEHC,CNEGnzK,AMFF2B,EAAE,CFGA,AEHC,AHAjCswK,CCGiC3xK,AEHC,CAAC,CNEG,EAAE,AMFJsvC,CNEK,CICF,AEHD,AHAtC,CHE2C,AMFJ,CNEK,AICJ,AEHA,CNEKpwC,AMFJ,CNEK,EICF,CJDID,AICHyzK,AEHF,CNEM,AMFL,CAAC,ENEK,CAAE,CICD,CAAC,EJDEhzK,MAAM,CAAC;ACMrF,EGJQ,ACZA,ACSA,AHDgBipB,IHGhB,AICI,ACZA,ACSA,CFGCwqJ,ACZA/xK,ACSApB,EDTE,EFQS,CERRoB,AFQQswK,CGCL,CDTD,EDYI,AEHF,CFGG5wK,AEHF,CAACM,EAAE,CFGG,AEHF,CFGG0xK,AEHF,CAAC,AHDH,EAAAnB,CGCItwK,EAAE,CFGK,AEHJ,CFGK,AEHJ,CAAC,CHDT,EGCUiuC,EAAE,CAAC,CAAC,CAAC,IAAE,CAAC,EAAC,CAACluC,EAAE,CAAC,CAAC,CAAC,GAACC,EAAE,CAAC,CAAC,CAAC,GAACiuC,EAAE,CAAC,CAAC,CAAC,IAAE,CAAC,EAAC,CAACluC,EAAE,CAAC,CAAC,CAAC,GAACC,EAAE,CAAC,CAAC,CAAC,GAACiuC,EAAE,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC;EFI/E,ACZA,ACSA,AHFgB,IHIhB,AICI,ACZA,ACSAwjI,AHFYlqJ,CCKXuqJ,ACZA9xK,EAAE,GAACA,AFOQ,CHIT1B,AMFI,CDTD,CFOMkpB,CCKF,AEHF,CFGG/nB,GEHCiyK,CFGG,CAACC,KJDC,AGJL,CAAAtB,CCKW,CAAC,MEHL,CAAC,EHFR,EGEY,CAACtwK,EAAE,EAAC,IAAI,CAACwxK,MAAM,EAAC,IAAI,CAAC5yK,MAAM,EAAC,IAAI,CAAC41K,MAAM,CAAC;EFIpE,ACZA,ACSA,AHDJ,EHGA,EICQ,ACZA,ACSA5C,CFGCG,ACZA7jI,EAAE,EFQXoiI,CERYpiI,CCSG,CDTD,EDYI,AEHF,CFGGxuC,GEHCiyK,CFGG,CAACE,CDJZ38J,CAAC,EAAC3S,CAAC,ECIgB,ADJfynB,CCIgB,ADJf,EAAC/nB,IGCS,AHDL,CGCM,CHDLwzG,GGCS,CAACx1G,CHDL,CGCO,CHDNuwK,CGCO,IAAI,CAACe,EHDJ,EAAClB,EGCS,EAAC,IAAI,CAACzxK,KHDD,CGCO,CHDN,CGCO,IAAI,CAAC4yK,MAAM,CAAC;ENEvE,AIEG,ACZA,ACSA,EHFiD,ECK7C,ACZA,ACSAK,CFGCE,ACZAV,CFO4CjjE,CEP1C,GAACijE,CCSG,AHFsC,CEPvC,EDYI,AEHF,CFGG3xK,GEHCiyK,CFGG,CAACG,OAAO,CAAC,MEHL,CAAC,IAAI,CAAC5jI,EAAE,EAAC,IAAI,CAACsmI,MAAM,EAAC,IAAI,CAAC51K,MAAM,EAAC,IAAI,CAAC2yK,MAAM,CAAC;AFIxE,CAAC,CJHA,AKRG,ACQA,EHHiDvzK,EEL7C,ACQA,CDRC60K,ACQAd,ENARp0K,KKRe,ECQE,CDRD,ACQE+B,CDRD,CAAC,AFKkC,EHGpD,AMAsB,CAACgyK,IHH6BpB,GGGtB,CAAC,OHHqB;AHGpD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jyK,EAAE,CAAC,CAAC,CAAC,CAAC;AFjCzG,EFmCI,AIDA,EClBoBrB,AFSpB,ECSM0zK,EEHM,CNIL,AGVH,GGMYyE,CNILn5K,AGVHgC,CAAC,GAAC,CCSQ,ADTP,CETS,ACeG,CDfH2oB,AFSR3oB,CCSO,ADTN,CGMW,EHNV+wK,CHUS,AIDAG,CJCC5xK,AMJI+tC,GNID,CAACnvC,AIDA,CJCC,AIDAw1B,GJCGn0B,AMJI,CACpBN,ENGmB,AGVR,CHUSf,AIDA,ADTRqH,CHUS,AIDA,CAAC,CJCCjG,AMHjB,CDhBF,ACgBGhB,CDhBHmwG,CLmBsB,AGVR,CHUStwG,CAAC,AGVT6B,CAAC,CEThB,CLmB2BT,AGVT,EAAC,CHUW,CAACpB,CAAC,CMHhB,CNGkBmB,CMFtC23K,ENEyC,CAAC74K,CAAC,EMFrC,CNEwCmB,AMFvCS,CAAC,ENEyC,CAAC5B,AMFzC,CNE0C,AMFzC,CNE0C,AMFzC,CAAC6B,CAAC,CAAC,CAAC3B,CDhBV,EAAE,UCgBqB,EAC5B24K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAAC,CAACC,CAAC,GAAC,CAAC,IAAEg3K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAACuF,MAAM,CAAC,CAACjH,aAAa,CAAC;AJjCxE,AFmCA,EIDIo0K,ECfIjkE,EFMAwiE,EGSQiG,CDfR,CAAKphE,IDeG,CAAC3gF,ACfC,GAAC2gF,ECeS,CAAC/1G,EDfL,ECeS,CAACo3K,CFAL,ADTA,CCSC1E,ADTA1yK,IAAI,CGSO,AHTN,CGSO,GHTH4wK,CCSC,EAAC6B,QDTS,CAACzB,CCSA,CAAC,CAACh4J,SAAS,CAAC,ADTC,CCSA,ADTC/Y,CAAC,CAAC,CAACuV,CAAC,EACzDtV,CAAC;ADzBb,AFmCA,EIDI,EFlCEiI,AGmBEumG,EDeEkkE,AEAE,AHTE,GENN,CAAKO,EHnBC,GAAAj1K,CEkCM,CCfA,EDeC,GFlCP,CAAAiK,AEkCWgpK,KAAK,CAACx9I,EFlCjB,GAAG,EEkCqB,CAAC4+I,EFlCjB,EEkCqB,CAACZ,EAAE,CAAC,CAAC,CAAC,GAACY,IAAI,CAAC/jI,EAAE,CAAC,CAAC,CAAC,EAAC+jI,IAAI,CAACZ,EAAE,CAAC,CAAC,CAAC,GAACY,IAAI,CAAC/jI,EAAE,CAAC,CAAC,CAAC,EAAC+jI,IAAI,CAACZ,EAAE,CAAC,CAAC,CAAC,GAACY,IAAI,CAAC/jI,EAAE,CAAC,CAAC,CAAC,CAAC;AFjCzG,AFmCA,EIDI,EFlCEpmC,AGmBEsmG,ACeA,CAAC,CFACmkE,ADTE7B,GDzBD,AFmCFvxK,AKhBD,CAAK2zK,CCgBA,CJnCFl1K,GImCK+B,CAAC,CDhBG,CDeE,CFlCX,AImCO,AHVO,CDzBdmI,AImCQ,AHVOnI,CHULR,AIDE,ADTI,CHULF,AMAF,AHVQ,CAAC+qB,CAAC,CDzBnB,AFmCc,AIDE6mJ,CDRfH,CHSc3xK,CEnCZ,EEkCkB,CAACs0B,KJCE,EAAC,AIDI,CAAC,ADRhB,CCQiB,ADRhB1zB,CAAC,CAAC,CAACsC,IAAI,EACrBrC,CAAC,EACD,KAAK,EACL8wK,aAAa,CAAC/wK,CAAC,CAAC,CAAC0wK,cAAc,CAAC,CAAC;ED7B7BtoK,AFoCZ,AIDAwqK,ECfInkE,AFUJ,ED9BgB,AIoCR,EJpCU,CAAC,AFoCZpvG,AKhBH,CAAK+zK,IDeG,CAACj+I,CJCC,CAAC71B,AKhBC,GLgBE,EAACH,KIDM,CAACwzK,OJCM,CAACvzK,EIDG,EAACozK,KJCK,CAAC,CAAC,GIDG,CAAC,CAACz5J,SAAS,CAAC,CAAC;AJEhE,EErCyB1Q,AEoCrB,ECfIomG,AFUJuiE,EGMQ,EJrCmB,CGqBvB,CHrByB,AGqBpBqC,CHrBqB,AIqClB,IAAIpzK,EDhBA,ACgBC,GAAC,CAAC,CHND,CGMEA,AHNDF,EGME,EHNE,CGMDk3K,AHNEhG,MGMI,CAACjxK,CAAC,GAAC,CAAC,CAAC,CAACuF,MAAM,CHNK,CGMJtF,AHNK,EGMJ,EAAE,EAAC;ANCjD,EEtCoCqI,AEqChC,ADLF,EEVMmmG,EDeEokE,CFrC+B,CIsCzB,CJtC2B,AGsBnC,CHtBoC,AGsB/BU,ECgBO6D,IAAI,EFDF,CECKt4K,EFDJ,EECQ,CAAC4X,CFDLw6J,ECfG,ECgBO,CFDL,AECMjxK,CFDLyzB,CECM,IAAE1zB,CAAC,CFDF,CAAC,CAAC,AECC,CAAC,CFDD,AECE,CFDD,AECE,CAAC,CFDF,CAAC,CAAC,CAAC;AJEhD,AGNA,EDjC8CuI,EGuBtCkmG,IHvB4C,AIuCpC,CNAPhvG,AKhBD,CHvB8C,AGuBzC+zK,CHvB0C,OFuCrC/zK,CAACF,GAAG,EAACZ,MAAM,AKhBI,ELgBH;EEvC2B6J,AFwCrD,AIDA,EChB8B,GHvB4B,CIwC9C,CJxCgD,AFwCrD,CExCsD,CGuB/BimG,ELiBnBzwG,GKjBmB,SLiBP,CAACuB,GAAG,CAACrB,CAAC,GAACS,MAAM,EAACY,GAAG,CAACpB,CAAC,GAACQ,MAAM,EAACY,GAAG,CAACnB,CAAC,GAACO,MAAM,CAAC;AACnE,EEzCmE8J,AEwC/D,AChBA,GHxBkE,CEwC9DqqK,CFxCgE,CIyCxD,SFDG,GAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AFxC6C,AF0C1E,CE1C2E,CEyCvE,ACjBC,IDiBEJ,EECS,CDlBXl0K,GCkBe64K,MFDD,CAACp8J,CECQ,CDlBvB,CDiBkB,ACjBlBq4J,CDiBmBT,AECK,IAAIxlI,IDlB5B,IDiB+B,AECK,CFDJ,AEEjB4pI,GFFkB,CAAC,EAAC,AEEd,CAACj3K,CAAC,CAAC,CAAC,CAACo3K,IAAI,GAACp3K,CAAC,GAACC,EAAC,IAAED,CAAC,GAAC,CAAC,CAAC,IAAEi3K,MAAM,CAACj3K,CAAC,CAAC,CAACuF,MAAM,CAAC,CAACjH,aAAa,EAC1D24K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAACC,EAAC,CAAC,CAAC3B,aAAa,EAC5B24K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAAC,CAACC,EAAC,GAAC,CAAC,IAAEg3K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAACuF,MAAM,CAAC,CAACjH,aAAa,CAAC;AJ5CxE,AF0CA,AKnBK,EAb0B0zK,EHVzBtpK,AEwCmCoqK,IEKzBoE,CJ7CL,AGU2B,GHV3Bj5K,GEwCyC,GAAC,CFxC1C,AEwC2C,CFxC3CyK,AEwC4C,AEK3B,CAAC3I,CFL4B,CAAC,EFxC/C,AEwCiD,AEK3B,CFL4B,AEK3Bs3K,CFL4B,CFxChD,MI6C4B,CAAC;ANFpC,AKlBA,EHzBS9uK,AEwC+C,IEMnD,EJ9CU,CF2CN7I,AKlBA+zK,CHzBQ,CAAC,MF2CD/zK,CAACT,MAAM,AKlBAw0K,CAACC,CLkBA/zK,MAAM,EAAC,GKlBK,EAACqxK,kBAAkB,EAAC2C,gBAAgB,EAAC79D,KAAK,EAAC;EHzB5DrtG,AF4CvB,AIHA,ACfA,GH1B0B,CF4CtB7I,AIHAmzK,AEMI,CJ/CoB,AG0BxB,CH1ByB,GG0BrB9yK,ACqBI,CDrBH,CLkBE,EKlBD,ACqBMquF,CNHJ,AKlBD,ACqBM,CFNF,CJGD,AKlBFruF,CAAC,ACqBK,CFNF,AEMG,CFNF,CAAC,ACfJ61G,ACqBMxnB,CAAC,CFND,CAAC,CEMC2oF,CFNC,ACfJ,CDeK,CAAC,ACfLh3K,CAAC,EAAE,ACqBK,CAACD,CDrBL,ACqBM,CAAC,CAACuF,MAAM,EAAC+oF,CAAC,EAAE,EAAC;EJ/CZ3lF,AF6C/B,AIHA,ECfI,ELkBDhJ,AIHAizK,ECfKgB,ACqBI,GJhD4B,CF6C/B,CE7CiC,CAAC,EF6ChC,CAAC,CIHG,CJGF,AIHG34J,GAAG,CAAC43J,ICfO,GAAC,EAAE,GDeE,CAAC,GAAC,CAAC,EAAC;EF1CSjqK,EF8CzC/I,AIJiCkzK,ACdjC,ICqBQ,CDrBJ,ELkBG,CAACjzK,AMGIs3K,CDrBJp3K,CH5B6C,AG4B5C,CLkBE,AIJiC,CF1CW,AF8C3C,AMGI,CDrBN,CDcmC,ACdlC,CDcmC,AEO3BlB,CFP4B,ACdnCkB,CAAC,CDcoC,CAAC,AEO3B,CDrBT0zK,ACqBUh9J,CFP4B,CAAC,CAAC,EJI7B,AMGI,CNHH,AMGI43E,CAAC,GAACtuF,CAAC,CDrBP,ACqBQ,CDrBPuF,ACqBQ,MDrBF,EAACvF,CAAC,EAAE,EAAC;AH5BmB,CAAC,CE0CH,EJKvDJ,EKlBI,ECqBI,GNHD,CAACG,AMGIu3K,INHA,CAAC,GMGO,CNHHt5K,EMGI,IAAIqvC,MNHI,CAAC,CAAC,AMGE,CACrB4pI,CNJoB,CAAC,EAAC,CAAC,CAAC,AMIlB,CNJmB,AMIlBj3K,CAAC,CAAC,CAACsuF,CAAC,CAAC,CAAChwF,aAAa,EAC1B24K,MAAM,CAACj3K,CAAC,GAAC,CAAC,CAAC,CAACsuF,CAAC,GAAC8oF,IAAI,GAAC,CAAC,CAAC,CAAC94K,aAAa,EACnC24K,MAAM,CAACj3K,CAAC,CAAC,CAAC,CAACsuF,CAAC,GAAC,CAAC,IAAE2oF,MAAM,CAACj3K,CAAC,CAAC,CAACuF,MAAM,CAAC,CAACjH,aAAa,CAAC;AJpDpE,EF+CI,AILA,CJKC,CE/CCuK,EE0CI0zC,ACbE,ECwBI26H,CNLR,CKnBQrD,GDaC,GF1CC,AE0CEf,CCbG,EH7BL70K,CG6BM,ACwBI,CAAC8B,GDxBDuzK,CCwBK,CJrDf,AIqDgBgE,CJrDhBzuK,AE0Ca,CAAC+b,KCbK,CDaC,ACbA8uJ,ACwBI,CFXHX,AEWI,IJrDzB,GAAG,CAAC,GE0C4B,ACbA,CDaC,ACbA/yK,CAAC,CAAC,CAACK,EAAE,EACxCqzK,YAAY,CAAC1zK,CAAC,CAAC,CAACM,EAAE;AH7BlC,EE0CI,EF1CEwI,AFgDE,EKnB2B,ACwBvB,UJrDM,GAAA7K,OAAA,CAAA6K,YAAA,GAAG,CAAC;AACtB,EE0CI,EF1CEC,AFgDE,AMKA,EFXE8vB,ACbM66I,QDaE,GF1CC,AE0CE,CCbO,CAAC1zK,CH7BV/B,AG6BW,CDaLizK,ACbM,CAAC3iI,EAAE,EDaJ,ACZdmlI,CH9BG,AE0CY/4H,CF1CZ5xC,UG8BS,CAAC/I,CAAC,CH9BX,AE0C0B,ACZd,CDYe,ACZd0xK,CDYe,CF1CzB,AG8BY,CH9BX,CG+BPzxK,CAAC,CAAC;AH9BlB,EE0CI44B,AEWA,EJrDE7vB,AFgDE,EKjBQ6qK,IDWJ,CAACp4H,ECXU,CAACy3H,OH/BD,AG+BQ,EDWN,CF1CFj1K,AE0CG,ACXMy1K,OH/BT,CAAA1qK,EE0Ca,EAAE,ACXM,CAAChJ,CAAC,CAAC,CDWLkxK,ACXMgC,KDWD,CAACp5H,CCXO,EH/BhC,GAAG,CAAC,eE0C2C,CAACoI,QAAQ,EAAE,CAAC,CAAC,CAAC;AFzCpF,EE0CIrpB,AEWA,EJrDE5vB,AFgDE,EKjBQ4qK,GCsBLqD,CFXC,CAAC37H,ECXU,CAAC43H,IH/BJ,CE0CC,CAAC52H,CF1CFt+C,AG+BW,ACsBR,GDtBSy1K,GDWH,CF1CT,AE0CU,CF1CVzqK,OG+BwB,CAACjJ,CAAC,CAAC,CAACmzK,GH/B5B,GAAG,CAAC,AG+B+B;AH9BvD,AIqDA,EFXI,EF1CEjqK,AFgDE,EKjBQ2qK,ELiBJv0K,GAAG,EKjBQ,CLiBPD,AKjBQ+zK,EH/BN,GAAAn1K,EFgDK,AKjBQ,CLiBPgB,EKjBQy0K,EH/Bd,CAAAxqK,CFgDY,EAAEzJ,MKjBY,CAACO,CAAC,CH/B5B,AFgDuB,AKjBM,CLiBLb,AKjBMi0K,EH/B3B,CAAC,IG+BiC,MLiBA,CAAC,CAAC,CAAC,EAACzzK,MAAM,CAAE,CAAC;AE/CpE,AIsDO,EFZH,EF1CEwJ,AFgDE,EINEkjC,ACXMwnI,GLiBJ,AMMI0D,INNAv3K,AKjBO,CLiBN,AINC,ACXMqzK,GLiBN,AING,CJMF,EEhDG,AFgDFrzK,CAAC,AINIkxK,ACXM,EH/BTjzK,CFgDA,AKjBUy1K,ACuBD6D,CNNR,AMMSN,CFZF,CJMNj3K,AINOu2C,CJMN,EEhDH,AFgDK,CEhDLptC,AIsDgB,CNNV,CMMW,CAEvC,EDzB4C,CAACnJ,CAAC,CAAC,CAACqzK,IDWA,CAAC,EF1C3B,AG+BiC,GH/B9B,CAAC;AAC1B,AIwDA,IJxDMjqK,AEyC6C6Y,EJOvC,AKjBI4xJ,GDUwC,EJOxC,AIP0C9nG,ECVnC,CAACynG,CLiBJvzK,CEhDF,AFgDG,GEhDHhC,AFgDI,CAAC,EAACgC,CAAC,GEhDP,AFgDQN,CEhDRyJ,KFgDc,EAACnJ,AKjBW,CLiBV,AKjBWF,ELiBT,EEhDlB,AFgDmB,AKjBY,CAACixK,EH/B7B,CAAC,eG+B8C,CAAC/wK,CAAC,CAAC,CAAC4zK,OAAO,CAACX,OAAO,CAAC,EACpElC,kBAAkB,CAAC/wK,CAAC,CAAC,CAAC4zK,OAAO,CAACV,OAAO,CAAC,EACtCnC,kBAAkB,CAAC/wK,CAAC,CAAC,CAAC4zK,OAAO,CAACT,OAAO,CAAC,EACtCpC,kBAAkB,CAAC/wK,CAAC,CAAC,CAAC4zK,OAAO,CAACR,OAAO,CAAC,CAAC;AHjC3D,AIwDA,EFhB8D,CAAC,CFxCzDhqK,AEwC0D,ECNhDwqK,ELcA,KEhDD,AGkCQ,CAACN,EHlCTt1K,OAAA,CAAAoL,OGkC0B,CAACtJ,CHlC3B,GAAG,AGkC4B,CHlC3B,AGkC4BixK,kBAAkB,CAAC/wK,CAAC,GAAC,CAAC,CAAC,CAAC4zK,OAAO,CAACX,OAAO,CAAC,EACnElC,kBAAkB,CAAC/wK,CAAC,GAAC,CAAC,CAAC,CAAC4zK,OAAO,CAACV,OAAO,CAAC,EACxCnC,kBAAkB,CAAC/wK,CAAC,GAAC,CAAC,CAAC,CAAC4zK,OAAO,CAACT,OAAO,CAAC,EACxCpC,kBAAkB,CAAC/wK,CAAC,GAAC,CAAC,CAAC,CAAC4zK,OAAO,CAACR,OAAO,CAAC,CAAC;AHpC7D,AIwDA,EFhBI,EFxCE/pK,EEwCIkgD,ACHEoqH,ELWIh0K,EIRF,EFxCA,CEwCG,EFxCH3B,AFgDS,CAAC8B,CIRHmxK,GJQO,CAAC5xK,CEhDf,AEwCY,CFxCZgK,AEwCa+2C,CJQK,CAAC,AKXF,CAACtgD,CDGD,CAAC84B,ECHI,CHrCtB,AGqCuBg7I,GHrCpB,CAAC,CEwCsB,EAAExnI,ACHE,CAAC,ODGK,CAAC;AFvCnD,AIwDO,EFhBHkmI,EFxCEhpK,AGqCE,ILWQjK,CMQAk4K,CFhBJ,CJQO,AIRNz3K,GFxCG,AFgDIP,CIRH,CAACgqD,CFxCFvrD,GEwCM,CAAC,AEgBKu5K,CAACC,EJxDb,CAAAluK,CFgDgB,CAACjK,GAAG,EAACU,CAAC,CAAC,CEhDvB,CIwD2B,EJxDxB,AIwDyB03K,CJxDxB,WIwDoC,EAAC;AJvDzD,EEwCI,AEgBA,EJxDEluK,AGqCEmqK,ELWI,QEhDI,GAAA11K,GGqCQ,CAAC8B,GHrCT,CAAAyJ,AGqCa,CAACoqK,SHrCd,GAAG,CAAC,MGqC6B,CAAC;AHpClD,EEwCI5rH,ACHA,ACmBA,EJxDEv+C,AFgDE,GIRC,CAAC/I,GAAG,CAAC8oD,IAAI,CAAC,CFxCC,GAAAvrD,OAAA,CAAAwL,cAAA,GAAG,CAAC;AACxB,AE0CA,ACLA,ELWI,AMQA,EJxDEC,EIwDEiuK,SAAS,GAAC,EJxDI,AIwDF,GJxDE15K,OAAA,CAAAyL,gBAAA,GAAG,CAAC;AAC1B,AGsCO,ELUH,AMQA,EJxDEC,EIwDEiuK,GDlBQ9D,SCkBI,GAAC,CDlBQA,CHtCJ,AGsCKC,ACkBP,GJxDE91K,OAAA,CAAA0L,CGsCiB,EAACqqK,QAAQ,EAACC,MHtC3B,GAAG,CAAC,AGsCiC,EAACC,OAAO,EAACC,UAAU,EAAC;AHrClF,EFgDI,AKVA,ACkBA,EJxDEvqK,EIwDEiuK,GNRGj4K,MMQM,CNRC,EMQA63K,EJxDI,GAAAx5K,OAAA,CAAA2L,CIwDU,CAAC,cJxDX,GAAG,CAAC;AAC1B,AFgDA,EKVI,ACkBA,EJxDEC,GIwDE,IAAI7J,CAAC,GAAC,CAAC,EJxDK,AIwDJA,CAAC,EJxDG/B,CIwDFy5K,MJxDE,CAAA7tK,KIwDU,CAACtE,MAAM,EJxDjB,AIwDkBvF,CAAC,EJxDhB,AIwDkB,CJxDjB,CIwDkB;AJvD1C,AFgDA,EKVI,EHtCE8J,AIwDE,WJxDS,GAAA7L,OAAA,CAAA6L,WAAA,GAAG,GAAG;AACvB,AFgDO,EKVHiqK,EHtCEhqK,AIwDE,IAAM+tK,CNRE53K,GMQE,EDlBF,CAACoD,ACkBE,CAACmmB,IJxDE,AIwDE,CNRIvpB,AMQHypB,CNRIhqB,AKVL,CHtCF1B,AGsCG,KLUU,EEhDb,AFgDc,AMQF,CJxDZ8L,AIwDa8tK,EDlBVrsI,OAAO,ACkBY,CAACnrC,CDlBT,CCkBW,CAAC,EAACopB,CJxD3B,GAAG,AIwD4B,CAACE,EJxD1B,OIwDmC,CAACkuJ,SAAS,CAACv3K,EAAE,CAAC,EAACmpB,IAAI,CAACE,SAAS,CAACkuJ,SAAS,CAACtpI,EAAE,CAAC,CAAC;AJvD3G,EFgDI,EEhDEvkC,AGsCE,ACkBA,ENRA7J,EMQM43K,INRA,AMQI,GNRH,AMQI,CAACtuJ,CNRH,GMQO,CAACE,MJxDI,GAAA1rB,AIwDK,CAACy5K,MJxDN,CAAA1tK,KIwDkB,CAAChK,CAAC,CAAC,CAACK,EAAE,CAAC,EAACopB,IAAI,CAACE,IJxD/B,GAAG,EIwDqC,CJxDlC,AIwDmC+tJ,YAAY,CAAC13K,CAAC,CAAC,CAACM,EAAE,CAAC,EAACmpB,IAAI,CAACE,SAAS,CAAC+tJ,YAAY,CAAC13K,CAAC,CAAC,CAACuuC,EAAE,CAAC,CAAC;AJvD7H,EFgDI,EEhDEtkC,AGsCE,ACkBA,GNRA,CKVGgqK,ACkBCvlJ,GNRA1uB,CAAC,CMQI,EJxDA,AFgDH,CAAC,AMQG,CAAC,CJxDF/B,AFgDD+B,AKVK,CLUJ,AKVKuF,ILUH5F,EEhDF,AGsCW,CHtCXsK,EGsCY,CLUJ,AKVK,ELUJjK,AKVK,CLUJ,EAAE,EAAC,CEhDb,GAAG,GAAG;AACvB,IAAMkK,AFgDE/J,AMQA,EDlBI,GCkBA,CNRE,AKVEi0K,CLUDr0K,EMQCE,CAAC,CJxDA,AFgDE,CAACP,CMQF,CJxDDzB,AIwDE,EDlBO,ACkBNgC,CAAC,EDlBM,CLUC,AKVAurC,ACkBNssI,CJxDL,AFgDY74K,CEhDZiL,EIwDS,CAAC3E,ENRQ,AKVA,CAAClF,CLUAL,CAAC,AKVC,CLUA,AMQL,CNRM,AKVAwrC,CHtCtB,AIwDiBvrC,CAAC,EJxDf,AIwDiB,EAAC,CJxDf,AGsCuB,CAACK,EAAE,EAACkrC,OAAO,CAAC+C,EAAE,CAAC;AHrC7D,EFgDI,EEhDEpkC,EGsCM,ACkBA,IAAG4tK,CDlBC,GHtCA,AIwDG,CDlBC/3K,ACkBAs1K,CDlBC,CHtCLr3K,EGsCM,CAAC,EAAC+B,CAAC,ACkBG,CJxDZ,AIwDa83K,CJxDb3tK,CGsCUiqK,ECkBO,CAACn0K,CAAC,CAAC,CAAC,EAAC,CJxDtB,CGsCoB,CAACsF,CHtClB,GAAG,EGsCqB,EAACvF,CAAC,EAAE,EAAC;AHrChD,EFgDI,EEhDEoK,IGsCU,ACkBAskB,CNRLvuB,GKVSk0K,CHtCL,AIwDM,ENRJ,CEhDFp2K,AIwDOywB,GDlBK,ECkBA,CDlBC,CHtCb,CAAAtkB,AIwDa,CAAC,EDlBI,MHtClB,GAAG,GAAG;AACrB,AFgDA,IEhDMC,EIwDM,EDlBI,KAAI,IAAIpK,CHtCJ,AGsCK,GHtCLhC,AGsCM,CAAC,EAACgC,CAAC,GH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tBDjG,SAAS,CAAC,CHnC5B,AGmC6B,CAAC,CAAC,CHnC5B,AIyD+B,CAAC,EAAC,CJzD7B,AIyD8B,CAAC;AJxD5D,IAAMjlK,AGmCEgnK,ECsBI6D,MJzDE,EGmCI,ACsBE,CJzDN/5K,AGmCK8B,ACsBEiU,IDtBE,CAAC8gK,CCsBG,CJzDb,AIyDcsD,CJzDdjrK,GGmCgB,CAAC,GCsBK,CJzDtB,CIyDuB,CAAC,CJzDrB,AIyDsB,IJzDlB;AACrB,EGmCI,CAAC,CHnCCC,AGmCA,ACsBE,SJzDO,GAAAnP,OAAA,CAAAmP,SAAA,GAAG,IAAI;AACtB,EGmCI,EHnCEC,AIyDE,iBJzDe,GAAApP,OAAA,CAAAoP,iBAAA,GAAG,IAAI;AAC9B,EGmCI2mK,EHnCE1mK,AIyDE,IAAGoqK,EDtBC,CHnCC,AGmCAp0K,GHnCArF,IGmCO,CAAC,CCsBE,CJzDV,AIyDWsH,CJzDX+H,KIyDiB,EJzDjB,AGmCQk+B,CCsBU,CAAC,CJzDhB,CIyDiB,GJzDb,AGmCQ,EAAI;AHlChC,IAAMj+B,AGmCE,ECqB0B0qK,KAAK,CAACP,OJxDnB,GAAAz5K,EIwD+B,EAAC+1K,GJxDhC,CAAAzmK,IIwDwC,EAAC2qK,SJxDzC,GAAG,AIwDkD,CAAC,GJxD/C;AAC5B,IAAM1qK,AGmCE,ACoBoE,IDpBhEunK,KHnCG,GAAA92K,GGmCQ,GAAC,CHnCT,AGmCUutC,CHnCVh+B,MGmCiB,CAACnN,EHnClB,AGmCoB,EAACmrC,CHnClB,IAAI,EGmCqB,CAAClrC,EAAE,EAACkrC,OAAO,CAAC+C,EAAE,EAAC/C,OAAO,CAACkmI,EAAE,CAAC;AHlCrE,EIsD6E,EJtDvEjkK,AGmCE,IAAIunK,SHnCO,EGmCI,CHnCJ/2K,EGmCK,CAACutC,IHnCN,CAAA/9B,EGmCa,CAACokK,MAAM,EAACrmI,EHnCrB,GAAG,EGmCyB,CAAComI,CHnCtB,KGmC4B,EAACpmI,OAAO,CAACmmI,MAAM,EAACnmI,OAAO,CAACsmI,MAAM,CAAC;AHlCrF,AIsDA,IJtDMpkK,AGmCE,KAAI,IAAI1N,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC+0K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,AG8BYm0K,CH9BZpiK,QG8BqB,CAAC,CAAC,CAAC,CAAC,UH9BzB,GAAG,KAAK;AACpC,EIsDI,EJtDEC,AG8BE6kK,MAAM,CAACrE,WAAW,CAAC1wK,GH9BC,CG8BG,CAACyrC,CH9BJvtC,MG8BW,CH9BX,AG8BYm0K,CH9BZniK,QG8BqB,CAAC,CAAC,CAAC,CAAC,UH9BzB,GAAG,KAAK;AACpC,EIsDI,EJtDEC,AG8BE4kK,ECwBEj8I,IDxBI,CAAC43I,GCwBG,GAAG,GJtDC,CIsDGS,CDxBC,CH9BJjzK,AG8BK8B,GCwBG,CDxBC,ACwBA46C,CDxBCnP,EH9BV,CAAAt7B,IG8BiB,CAACkiK,KCwBK,CAAC,CAAC,EDxBE,CAAC,CH9B5B,AG8B6B,CAAC,CAAC,CH9B5B,KAAK;AAC9B,EIsDIv5I,EJtDE1oB,AG8BE2kK,MAAM,ACwBF,CDxBGrE,ACwBFh1H,CJtDC,GAAAx9C,OAAA,AG8BY,CH9BZkS,AG8BapQ,ACwBF,CAAC,GDxBK,CAACyrC,GH9BlB,GAAG,AIsDmB,CDxBG,CAAC4mI,ACwBF,EJtDjB,EIsDqBlB,KDxBO,ACwBF,CDxBG,ACwBFp3H,CDxBG,CAAC,CAAC,mBCwBiB,CAACoI,QAAQ,EAAE,CAAC,CAAC,CAAC;AJrDpF,EIsDI,EJtDE9xC,AG8BE+jK,UH9BQ,AG8BE,CAACp0K,EH9BH9B,EG8BO,CAAC62K,IH9BR,CAAA1kK,CG8Bc,CAAC,QH9Bf,GAAG,IAAI;AACvB,EG8BI,ACwBA,CDxBC,CH9BCC,AG8BA,ECwBIg8B,QAAQ,EJtDA,CIsDG,EJtDHpuC,EIsDOizK,KJtDP,AIsDY,CJtDZ7gK,AIsDakmC,YJtDb,GAAG,EIsD2B,CAAC,CJtDxB;AACzB,AG8BA,IH9BMjmC,AIqD6C2R,KAAK,EAAE8pD,YJrDjC,GAAA9tE,OAAA,CAAAqS,mBAAA,GAAG,IAAI;AAChC,AG8BO,ECsBuD,CAAC,CJpDzDC,AIoD0D,KDtBhD0kK,WAAWA,CH9BJ,AG8BK3C,GH9BLr0K,CG8BS,EAAC8tE,GAAG,CH9Bb,CAAAx7D,AG8Bcy3C,KAAK,EAACuqH,QAAQ,EH9B5B,AG8B0C,GH9B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","file":"Triangle.d1f7b0d6.js","sourceRoot":"..","sourcesContent":["//TODO:\r\n//创建六边形cube coordinate坐标\r\nexport class HexCubeCoord{\r\n    //一个六边形\r\n    static worldPosition;//世界坐标\r\n    constructor(q,r,s){\r\n        //六边形的HexCube坐标+它的世界坐标\r\n        this.q=q;\r\n        this.r=r;\r\n        this.s=s;\r\n        this.worldPosition=this.worldPosition(q,r,s);\r\n        this.subsquad_list=[];\r\n    };\r\n    worldPosition(q,r,s){\r\n        //这个六边形的中心点\r\n        var factor=2;\r\n        var world_position=new Array((q*Math.sqrt(3)/2)*factor, 0, (-r-(q/2))*factor);\r\n        //console.log(\"world position\",world_position[0],world_position[1],world_position[2]);\r\n        return world_position;\r\n    }\r\n}\r\nvar center=new HexCubeCoord(0,0,0);\r\n//六边形移动方向\r\nvar cube_direction_vectors=[\r\n    new HexCubeCoord(+1,0,-1),\r\n    new HexCubeCoord(+1,-1,0),\r\n    new HexCubeCoord(0,-1,+1),\r\n    new HexCubeCoord(-1,0,+1),\r\n    new HexCubeCoord(-1,+1,0),\r\n    new HexCubeCoord(0,+1,-1)\r\n];\r\n//返回一个方向\r\nfunction CubeDirection(direction){\r\n    return cube_direction_vectors[direction];\r\n}\r\n//定义Add方法\r\nfunction CubeAdd(hex,dir){\r\n    //console.log(dir.q,dir.r,dir.s);\r\n    return new HexCubeCoord(hex.q + dir.q, hex.r + dir.r, hex.s + dir.s);\r\n}\r\n//返回一个六边形HexCoord：按方向移动\r\nfunction CubeNeighbor(hex,direction){\r\n    return CubeAdd(hex,CubeDirection(direction));\r\n}\r\n//定义Scale方法\r\nfunction CubeScale(dir,factor){\r\n    return new HexCubeCoord(dir.q*factor,dir.r*factor,dir.s*factor);\r\n}\r\n//Single Ring\r\n//返回一个六边形list：一个半径为Radius的六边形环\r\nexport function CubeRing(center,radius){\r\n    var results=[];\r\n    if(radius==0){\r\n        console.log(\"radius is 0\");\r\n        results.push(new HexCubeCoord(0,0,0));\r\n    }\r\n    else{\r\n        //console.log(\"genterating single ring of radius \",radius);\r\n        // var hex=new HexCubeCoord(center.q + CubeScale(CubeDirection(4),radius).q, \r\n        // center.r + CubeScale(CubeDirection(4),radius).r, \r\n        // center.s + CubeScale(CubeDirection(4),radius).s);\r\n        var hex=CubeAdd(center,(CubeScale(CubeDirection(4),radius)));\r\n        for(let i=0;i<6;i++){\r\n            for(let j=0;j<radius;j++){\r\n                //console.log(\"world position\",hex.worldPosition[0],hex.worldPosition[1],hex.worldPosition[2]);\r\n                results.push(hex);\r\n                hex=CubeNeighbor(hex,i);\r\n            }\r\n        }\r\n    }\r\n    //console.log(results.length);\r\n    return results;\r\n}\r\n//返回一个六边形list：一个半径为radius的六边形饼\r\nexport function HexCoordList(radius){\r\n    var result=[];\r\n    for(let i=0;i<=radius;i++){\r\n        result.push(CubeRing(center,i));\r\n    }\r\n    return result;\r\n}","//Edge类\r\nexport class Edge{\r\n    constructor(va,vb,AllEdges){\r\n        this.va=va;\r\n        this.vb=vb;\r\n        //代替HashSet\r\n        const newEdge = new Set();\r\n        // 添加元素\r\n        newEdge.add(va);\r\n        newEdge.add(vb);\r\n        AllEdges.push(this);\r\n    }\r\n}\r\nexport function IsEdgeExist(va,vb,AllEdges){\r\n    //判断以va, vb为顶点的边是否已经存在了\r\n    // AllEdges.forEach(element => {\r\n    //     if(element.newEdge.has(va)&&element.newEdge.has(vb)){\r\n    //         //说明这个边已经存在了\r\n    //         return element;//这里的element是一个\r\n    //     }\r\n    // });\r\n    return null;\r\n}","/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '145';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022; // @deprecated since r137\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// handle empty sphere cases\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t} else if ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DefaultMatrixWorldAutoUpdate; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.DefaultMatrixWorldAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import { HexCubeCoord } from \"./HexCubeCoord\";\r\nexport class Vertex{\r\n    subquadlist=[];\r\n    subquadid_list=[];\r\n    constructor(x,y,z,type) {\r\n        this.x=x;\r\n        this.y=y;\r\n        this.z=z;\r\n        this.type=type;\r\n        this.subquadlist=[];//不确定，最好别用\r\n        this.subquadid_list=[];\r\n      }\r\n}\r\n\r\nexport class MarchVertex extends Vertex{\r\n  subquadid_list=[];\r\n    constructor(x,y,z,type,layer,IsActive,subquadid_list){\r\n      super(x,y,z,type);\r\n      this.layer=layer;\r\n      this.subquadid_list=subquadid_list;\r\n      this.IsActive=IsActive;\r\n    }\r\n}\r\n\r\nexport function CreateMarchVertex(AllVertexList,AllMarchVertexList,layer){\r\n  //根据顶点坐标创建3D\r\n  for(let j=0;j<layer;j++){\r\n    var AllMarchVertexLayer_j=[];\r\n    for(let i=0;i<AllVertexList.length;i++){\r\n        AllMarchVertexLayer_j.push(new MarchVertex(AllVertexList[i].x,\r\n            j,//layer*height,因为设置的height=1\r\n            AllVertexList[i].z,\r\n            AllVertexList[i].type,\r\n            j,\r\n            false,\r\n            AllVertexList[i].subquadid_list));\r\n    }\r\n    AllMarchVertexList.push(AllMarchVertexLayer_j);\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { SubQuad } from './SubQuad.js';\r\nexport class Quad{\r\n    squadlist=[];\r\n    constructor(va,vb,vc,vd){\r\n        this.va=va;\r\n        this.vb=vb;\r\n        this.vc=vc;\r\n        this.vd=vd;\r\n        this.mid_cd=[(vd[0]+vc[0])/2,(vd[1]+vc[1])/2,(vd[2]+vc[2])/2];\r\n        this.mid_bc=[(vb[0]+vc[0])/2,(vb[1]+vc[1])/2,(vb[2]+vc[2])/2];\r\n        this.mid_ab=[(va[0]+vb[0])/2,(va[1]+vb[1])/2,(va[2]+vb[2])/2];\r\n        this.mid_ad=[(va[0]+vd[0])/2,(va[1]+vd[1])/2,(va[2]+vd[2])/2];\r\n        this.center=[(this.mid_ab[0]+this.mid_cd[0])/2,(this.mid_ab[1]+this.mid_cd[1])/2,(this.mid_ab[2]+this.mid_cd[2])/2];\r\n        var squad_a=new SubQuad(this.va,this.mid_ab,this.center,this.mid_ad);\r\n        var squad_b=new SubQuad(this.vb,this.mid_bc,this.center,this.mid_ab);\r\n        var squad_c=new SubQuad(this.vc,this.mid_cd,this.center,this.mid_bc);\r\n        var squad_d=new SubQuad(this.vd,this.mid_ad,this.center,this.mid_cd);\r\n        this.squadlist.push(squad_a);\r\n        this.squadlist.push(squad_b);\r\n        this.squadlist.push(squad_c);\r\n        this.squadlist.push(squad_d);\r\n    }\r\n}\r\nexport function DrawQuad(quad,col,scene,meshlist){\r\n    console.log(\"drawquad\");\r\n    const vertices = [\r\n        quad.vd[0],quad.vd[1],quad.vd[2],\r\n        quad.vc[0],quad.vc[1],quad.vc[2],   // 第一个顶点的坐标\r\n        quad.vb[0],quad.vb[1],quad.vb[2],  // 第二个顶点的坐标\r\n        quad.va[0],quad.va[1],quad.va[2]      // 第三个顶点的坐标\r\n      ];\r\n    // console.log(vertices);\r\n\r\n    const SharedEdge=new THREE.Vector3(quad.vd[0]-quad.vb[0],quad.vd[1]-quad.vb[1],quad.vd[2]-quad.vb[2]);\r\n    // console.log(SharedEdge);\r\n    const CheckEdge1=new THREE.Vector3(quad.vd[0]-quad.va[0],quad.vd[1]-quad.va[1],quad.vd[2]-quad.va[2]);\r\n    const CheckNormal1=new THREE.Vector3();\r\n    CheckNormal1.crossVectors(CheckEdge1,SharedEdge).normalize();\r\n    const CheckEdge2=new THREE.Vector3(quad.vd[0]-quad.vc[0],quad.vd[1]-quad.vc[1],quad.vd[2]-quad.vc[2]);\r\n    const CheckNormal2=new THREE.Vector3();\r\n    CheckNormal2.crossVectors(CheckEdge2,SharedEdge).normalize();\r\n    //console.log(CheckNormal2);\r\n    const targetNormal=new THREE.Vector3(0,1,0);//期望的法线方向\r\n    \r\n    //console.log(CheckNormal1.dot(targetNormal),CheckNormal2.dot(targetNormal));\r\n    var indices_pt1=[0, 3, 1];\r\n    if(CheckNormal1.dot(targetNormal)<0){indices_pt1=[0, 1, 3];}\r\n    var indices_pt2=[1, 2, 3];\r\n    if(CheckNormal2.dot(targetNormal)<0){indices_pt2=[3, 2, 1];}\r\n    const indices = indices_pt1.concat(indices_pt2);\r\n    // 创建缓冲区几何体\r\n    const geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n    geometry.setIndex(indices);\r\n    // 创建材质和网格\r\n    const material = new THREE.MeshBasicMaterial({ color: col });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    meshlist.push(mesh);\r\n    // 将网格添加到场景中\r\n    scene.add(mesh);\r\n\r\n    \r\n}","import * as THREE from 'three';\r\nimport { Vertex } from './Vertex';\r\nimport { Triangle } from './Triangle';\r\nimport { Quad } from './Quad';\r\nexport class SubQuad{\r\n    constructor(va,vb,vc,vd){\r\n        this.va=va;\r\n        this.vb=vb;\r\n        this.vc=vc;\r\n        this.vd=vd;\r\n\r\n        this.VerAidx=-1;\r\n        this.VerBidx=-1;\r\n        this.VerCidx=-1;\r\n        this.VerDidx=-1;\r\n    }\r\n}\r\nexport class MarchCube extends SubQuad{\r\n    //有八个顶点的\r\n    MarchVertList_Top=[];\r\n    MarchVertList_Bottom=[];\r\n    constructor(va,vb,vc,vd,layer){\r\n        super(va,vb,vc,vd);\r\n        this.layer=layer;\r\n        this.VerAidx;\r\n        this.VerBidx;\r\n        this.VerCidx;\r\n        this.VerDidx;\r\n        this.MarchVertList_Top;\r\n        this.MarchVertList_Bottom;\r\n    }\r\n}\r\nexport function CreateMarchCube(AllSquadList,AllMarchVertexList,AllMarchCubeList,layer){\r\n    for(let j=0;j<layer;j++){\r\n        var AllMarchCubeLayer_j=[];\r\n        for(let i=0;i<AllSquadList.length;i++){\r\n            //var new_va=[AllSquadList[i].va[0],i]\r\n            var NewCube=new MarchCube(AllSquadList[i].va,\r\n                AllSquadList[i].vb,//layer*height,因为设置的height=1\r\n                AllSquadList[i].vc,\r\n                AllSquadList[i].vd,\r\n                j);\r\n                NewCube.VerAidx=AllSquadList[i].VerAidx;\r\n                NewCube.VerBidx=AllSquadList[i].VerBidx;\r\n                NewCube.VerCidx=AllSquadList[i].VerCidx;\r\n                NewCube.VerDidx=AllSquadList[i].VerDidx;\r\n                NewCube.MarchVertList_Bottom.push(AllMarchVertexList[j][NewCube.VerAidx],\r\n                    AllMarchVertexList[j][NewCube.VerBidx],\r\n                    AllMarchVertexList[j][NewCube.VerCidx],\r\n                    AllMarchVertexList[j][NewCube.VerDidx]);\r\n                NewCube.MarchVertList_Top.push(AllMarchVertexList[j+1][NewCube.VerAidx],\r\n                    AllMarchVertexList[j+1][NewCube.VerBidx],\r\n                    AllMarchVertexList[j+1][NewCube.VerCidx],\r\n                    AllMarchVertexList[j+1][NewCube.VerDidx]);\r\n            AllMarchCubeLayer_j.push(NewCube);\r\n        }\r\n        AllMarchCubeList.push(AllMarchCubeLayer_j);\r\n    }\r\n}\r\n\r\nexport function MapSubQuad4UI(TriangleList,QuadList,VertexList,MidList,CenterList){\r\n    //HexCenterPosList作为所有可选顶点的索引\r\n    //输入得到的所有的三角形，因为他们都互补相邻，所以直接获取他们的顶点就可以\r\n    //输入所有得到的四边形，遍历他们的顶点，如果已经存在了就直接加进去\r\n    TriangleList.forEach(element => {\r\n        //创建顶点+检验是否重合\r\n        if(VertexList.length>0){\r\n            var TriVetList=[element.va,element.vb,element.vc];\r\n            for(let i=0;i<TriVetList.length;i++){\r\n                let IsExist=false;\r\n                for(let j=0;j<VertexList.length;j++){\r\n                    if(TriVetList[i][0]==VertexList[j].x&&TriVetList[i][1]==VertexList[j].y&&TriVetList[i][2]==VertexList[j].z){\r\n                        //vertex already exist\r\n                        VertexList[j].subquadlist.push(element.squadlist[i]);\r\n                        IsExist=true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(IsExist){continue;}\r\n                var NewVet=new Vertex(TriVetList[i][0],TriVetList[i][1],TriVetList[i][2],\"vertex\");\r\n                NewVet.subquadlist.push(element.squadlist[i]);\r\n                VertexList.push(NewVet);\r\n            }\r\n        }\r\n        else{\r\n        var VetA=new Vertex(element.va[0],element.va[1],element.va[2],\"vertex\");\r\n        VetA.subquadlist.push(element.squadlist[0]);\r\n        var VetB=new Vertex(element.vb[0],element.vb[1],element.vb[2],\"vertex\");\r\n        VetB.subquadlist.push(element.squadlist[1]);\r\n        var VetC=new Vertex(element.vc[0],element.vc[1],element.vc[2],\"vertex\");\r\n        VetC.subquadlist.push(element.squadlist[2]);\r\n        VertexList.push(VetA);\r\n        VertexList.push(VetB);\r\n        VertexList.push(VetC);}\r\n\r\n        //创建中点\r\n        var MidAB=new Vertex(element.mid_ab[0],element.mid_ab[1],element.mid_ab[2],\"middle\");\r\n        MidAB.subquadlist.push(element.squadlist[0]);\r\n        MidAB.subquadlist.push(element.squadlist[1]);\r\n        var MidBC=new Vertex(element.mid_bc[0],element.mid_bc[1],element.mid_bc[2],\"middle\");\r\n        MidBC.subquadlist.push(element.squadlist[1]);\r\n        MidBC.subquadlist.push(element.squadlist[2]);\r\n        var MidAC=new Vertex(element.mid_ac[0],element.mid_ac[1],element.mid_ac[2],\"middle\");\r\n        MidAC.subquadlist.push(element.squadlist[0]);\r\n        MidAC.subquadlist.push(element.squadlist[2]);\r\n        MidList.push(MidAB);\r\n        MidList.push(MidBC);\r\n        MidList.push(MidAC);\r\n\r\n        //创建Center\r\n        var Center=new Vertex(element.center[0],element.center[1],element.center[2],\"center\");\r\n        Center.subquadlist.push(element.squadlist[0]);\r\n        Center.subquadlist.push(element.squadlist[1]);\r\n        Center.subquadlist.push(element.squadlist[2]);\r\n        CenterList.push(Center);\r\n    });\r\n    //onsole.log(CenterList[0].x);\r\n    QuadList.forEach(element => {\r\n        //创建顶点+判断\r\n        var QuadVetList=[element.va,element.vb,element.vc,element.vd];\r\n        var QuadMidList=[element.mid_ab,element.mid_bc,element.mid_cd,element.mid_ad];\r\n        for(let i=0;i<QuadVetList.length;i++){\r\n            let IsExist=false;\r\n            for(let j=0;j<VertexList.length;j++){\r\n                if(QuadVetList[i][0]==VertexList[j].x&&QuadVetList[i][1]==VertexList[j].y&&QuadVetList[i][2]==VertexList[j].z){\r\n                    //vertex already exist\r\n                    VertexList[j].subquadlist.push(element.squadlist[i]);\r\n                    IsExist=true;\r\n                    break;\r\n                }\r\n            }\r\n            if(IsExist){continue;}\r\n            var NewVet=new Vertex(QuadVetList[i][0],QuadVetList[i][1],QuadVetList[i][2],\"vertex\");\r\n            NewVet.subquadlist.push(element.squadlist[i]);\r\n            VertexList.push(NewVet);\r\n        }\r\n        for(let i=0;i<QuadMidList.length;i++){\r\n            let IsExist=false;\r\n            for(let j=0;j<MidList.length;j++){\r\n                if(QuadMidList[i][0]==MidList[j].x&&QuadMidList[i][1]==MidList[j].y&&QuadMidList[i][2]==MidList[j].z){\r\n                    //vertex already exist\r\n                    MidList[j].subquadlist.push(element.squadlist[i]);\r\n                    MidList[j].subquadlist.push(element.squadlist[(i+1)%QuadMidList.length]);\r\n                    IsExist=true;\r\n                    break;\r\n                }\r\n            }\r\n            if(IsExist){continue;}\r\n            var NewVet=new Vertex(QuadMidList[i][0],QuadMidList[i][1],QuadMidList[i][2],\"middle\");\r\n            NewVet.subquadlist.push(element.squadlist[i]);\r\n            NewVet.subquadlist.push(element.squadlist[(i+1)%QuadMidList.length]);\r\n            MidList.push(NewVet);\r\n        }\r\n        //创建Center\r\n        var Center=new Vertex(element.center[0],element.center[1],element.center[2],\"center\");\r\n        Center.subquadlist.push(element.squadlist[0]);\r\n        Center.subquadlist.push(element.squadlist[1]);\r\n        Center.subquadlist.push(element.squadlist[2]);\r\n        Center.subquadlist.push(element.squadlist[3]);\r\n        CenterList.push(Center);\r\n    });\r\n}\r\nexport function DrawSubQuad(quad,col,scene,meshlist,IsLine=false){\r\n    //console.log(\"drawsquad\");\r\n    const vertices = [\r\n        quad.vd[0],quad.vd[1],quad.vd[2],\r\n        quad.vc[0],quad.vc[1],quad.vc[2],   // 第一个顶点的坐标\r\n        quad.vb[0],quad.vb[1],quad.vb[2],  // 第二个顶点的坐标\r\n        quad.va[0],quad.va[1],quad.va[2]      // 第三个顶点的坐标\r\n      ];\r\n    //console.log(vertices);\r\n\r\n    const SharedEdge=new THREE.Vector3(quad.vd[0]-quad.vb[0],quad.vd[1]-quad.vb[1],quad.vd[2]-quad.vb[2]);\r\n    // console.log(SharedEdge);\r\n    const CheckEdge1=new THREE.Vector3(quad.vd[0]-quad.va[0],quad.vd[1]-quad.va[1],quad.vd[2]-quad.va[2]);\r\n    const CheckNormal1=new THREE.Vector3();\r\n    CheckNormal1.crossVectors(CheckEdge1,SharedEdge).normalize();\r\n    const CheckEdge2=new THREE.Vector3(quad.vd[0]-quad.vc[0],quad.vd[1]-quad.vc[1],quad.vd[2]-quad.vc[2]);\r\n    const CheckNormal2=new THREE.Vector3();\r\n    CheckNormal2.crossVectors(CheckEdge2,SharedEdge).normalize();\r\n    //console.log(CheckNormal2);\r\n    const targetNormal=new THREE.Vector3(0,1,0);//期望的法线方向\r\n    \r\n    //console.log(CheckNormal1.dot(targetNormal),CheckNormal2.dot(targetNormal));\r\n    var indices_pt1=[0, 3, 1];\r\n    if(CheckNormal1.dot(targetNormal)<0){indices_pt1=[0, 1, 3];}\r\n    var indices_pt2=[1, 2, 3];\r\n    if(CheckNormal2.dot(targetNormal)<0){indices_pt2=[3, 2, 1];}\r\n    const indices = indices_pt1.concat(indices_pt2);\r\n    // 创建缓冲区几何体\r\n    const geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n    geometry.setIndex(indices);\r\n    // 创建材质和网格\r\n    const material = new THREE.MeshBasicMaterial({ color: col});\r\n    var mesh = new THREE.Mesh(geometry, material);\r\n    if(IsLine){mesh = new THREE.LineSegments(new THREE.EdgesGeometry(geometry), material);}\r\n    meshlist.push(mesh);\r\n    // 将网格添加到场景中\r\n    scene.add(mesh);   \r\n}\r\n\r\n\r\nexport function Smooth(VertexList,SQuadList){\r\n    //Map(VertexList,SQuadList);\r\n    SQuadList.forEach((element,index) => {\r\n        for(let i=0;i<15;i++)\r\n        {SmoothSquad(index,VertexList,SQuadList);}\r\n        //更新对应的顶点坐标\r\n    });\r\n}\r\nexport function Map(VertexList,SQuadList){\r\n    //Map\r\n    SQuadList.forEach((element,index) => {\r\n        for(let i=0;i<VertexList.length;i++){\r\n            if(element.va[0]==VertexList[i].x\r\n                &&element.va[1]==VertexList[i].y\r\n                &&element.va[2]==VertexList[i].z){element.VerAidx=i;if((VertexList[i].subquadid_list).includes(index)==false){VertexList[i].subquadid_list.push(index);}}\r\n            if(element.vb[0]==VertexList[i].x\r\n                &&element.vb[1]==VertexList[i].y\r\n                &&element.vb[2]==VertexList[i].z){element.VerBidx=i;if((VertexList[i].subquadid_list).includes(index)==false){VertexList[i].subquadid_list.push(index);}}\r\n            if(element.vc[0]==VertexList[i].x\r\n                &&element.vc[1]==VertexList[i].y\r\n                &&element.vc[2]==VertexList[i].z){element.VerCidx=i;if((VertexList[i].subquadid_list).includes(index)==false){VertexList[i].subquadid_list.push(index);}}\r\n            if(element.vd[0]==VertexList[i].x\r\n                &&element.vd[1]==VertexList[i].y\r\n                &&element.vd[2]==VertexList[i].z){if((VertexList[i].subquadid_list).includes(index)==false){element.VerDidx=i;VertexList[i].subquadid_list.push(index);}}\r\n        }\r\n    });\r\n}\r\n\r\nfunction SmoothSquad(index,VertexList,SQuadList){\r\n    var Squad=SQuadList[index];\r\n    //需要重新编号，找到那个分类为顶点的点\r\n\r\n    var squad_center=[(Squad.va[0]+Squad.vb[0]+Squad.vc[0]+Squad.vd[0])/4,\r\n        (Squad.va[1]+Squad.vb[1]+Squad.vc[1]+Squad.vd[1])/4,\r\n        (Squad.va[2]+Squad.vb[2]+Squad.vc[2]+Squad.vd[2])/4];//这个不需要判断\r\n\r\n    var vecA=new THREE.Vector3(Squad.va[0]-squad_center[0],Squad.va[1]-squad_center[1],Squad.va[2]-squad_center[2]);\r\n    var vecB=new THREE.Vector3(Squad.vb[0]-squad_center[0],Squad.vb[1]-squad_center[1],Squad.vb[2]-squad_center[2]);\r\n    var vecC=new THREE.Vector3(Squad.vc[0]-squad_center[0],Squad.vc[1]-squad_center[1],Squad.vc[2]-squad_center[2]);\r\n    var vecD=new THREE.Vector3(Squad.vd[0]-squad_center[0],Squad.vd[1]-squad_center[1],Squad.vd[2]-squad_center[2]);\r\n\r\n    var rotationQuaternionMid1 = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), 90 * (Math.PI / 180));\r\n    var rotationQuaternionCenter = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), 180 * (Math.PI / 180));\r\n    var rotationQuaternionMid2 = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), 270 * (Math.PI / 180));\r\n\r\n    var mVertexList=[Squad.va,Squad.vb,Squad.vc,Squad.vd];\r\n    var VectorList=[vecA,vecB,vecC,vecD];\r\n    var WhereIsVertex=-1;\r\n    var idxs=[Squad.VerAidx,Squad.VerBidx,Squad.VerCidx,Squad.VerDidx];\r\n    var ReOrderList=[];\r\n    for(let i=0;i<4;i++){\r\n        var id=idxs[i];\r\n        if(VertexList[id].type==\"vertex\"){\r\n            WhereIsVertex=i;\r\n            ReOrderList.push(i,(1+i)%4,(2+i)%4,(3+i)%4);//[2,3,0,1][vertex,mid1,center,mid2]\r\n            //console.log(ReOrderList);\r\n        }//WhereIsVertex=0:A是顶点，WhereIsVertex=1：B是顶点\r\n        //\r\n    }\r\n\r\n    var rotatedVector1 = VectorList[ReOrderList[1]].applyQuaternion(rotationQuaternionMid1).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n    var rotatedVector2 = VectorList[ReOrderList[2]].applyQuaternion(rotationQuaternionCenter).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n    var rotatedVector3 = VectorList[ReOrderList[3]].applyQuaternion(rotationQuaternionMid2).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n\r\n    \r\n    var UpdateVertex=new THREE.Vector3((mVertexList[WhereIsVertex][0]+rotatedVector1.x+rotatedVector2.x+rotatedVector3.x)/4,\r\n                                (mVertexList[WhereIsVertex][1]+rotatedVector1.y+rotatedVector2.y+rotatedVector3.y)/4,\r\n                                (mVertexList[WhereIsVertex][2]+rotatedVector1.z+rotatedVector2.z+rotatedVector3.z)/4);\r\n\r\n    var NewVertexVector=new THREE.Vector3(UpdateVertex.x-squad_center[0],UpdateVertex.y-squad_center[1],UpdateVertex.z-squad_center[2]);\r\n    var UpdateMid1=NewVertexVector.applyQuaternion(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), -90 * (Math.PI / 180))).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n    var UpdateCenter=NewVertexVector.applyQuaternion(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), -180 * (Math.PI / 180))).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n    var UpdateMid2=NewVertexVector.applyQuaternion(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 1), -270 * (Math.PI / 180))).add(new THREE.Vector3(squad_center[0],squad_center[1],squad_center[2]));\r\n\r\n    // //update this squad\r\n    //判断\r\n    const factor=0.02;\r\n    var UpdateList=[UpdateVertex,UpdateMid1,UpdateCenter,UpdateMid2];\r\n    SQuadList[index].va=[factor*(UpdateList[ReOrderList.indexOf(0)].x-Squad.va[0])+Squad.va[0],factor*(UpdateList[ReOrderList.indexOf(0)].y-Squad.va[1])+Squad.va[1],factor*(UpdateList[ReOrderList.indexOf(0)].z-Squad.va[2])+Squad.va[2]];\r\n    SQuadList[index].vb=[factor*(UpdateList[ReOrderList.indexOf(1)].x-Squad.vb[0])+Squad.vb[0],factor*(UpdateList[ReOrderList.indexOf(1)].y-Squad.vb[1])+Squad.vb[1],factor*(UpdateList[ReOrderList.indexOf(1)].z-Squad.vb[2])+Squad.vb[2]];\r\n    SQuadList[index].vc=[factor*(UpdateList[ReOrderList.indexOf(2)].x-Squad.vc[0])+Squad.vc[0],factor*(UpdateList[ReOrderList.indexOf(2)].y-Squad.vc[1])+Squad.vc[1],factor*(UpdateList[ReOrderList.indexOf(2)].z-Squad.vc[2])+Squad.vc[2]];\r\n    SQuadList[index].vd=[factor*(UpdateList[ReOrderList.indexOf(3)].x-Squad.vd[0])+Squad.vd[0],factor*(UpdateList[ReOrderList.indexOf(3)].y-Squad.vd[1])+Squad.vd[1],factor*(UpdateList[ReOrderList.indexOf(3)].z-Squad.vd[2])+Squad.vd[2]];\r\n\r\n    //update vertex+update influenced squad\r\n    VertexList[SQuadList[index].VerAidx].x=SQuadList[index].va[0];\r\n    VertexList[SQuadList[index].VerAidx].y=SQuadList[index].va[1];\r\n    VertexList[SQuadList[index].VerAidx].z=SQuadList[index].va[2];\r\n\r\n    VertexList[SQuadList[index].VerBidx].x=SQuadList[index].vb[0];\r\n    VertexList[SQuadList[index].VerBidx].y=SQuadList[index].vb[1];\r\n    VertexList[SQuadList[index].VerBidx].z=SQuadList[index].vb[2];\r\n\r\n    VertexList[SQuadList[index].VerCidx].x=SQuadList[index].vc[0];\r\n    VertexList[SQuadList[index].VerCidx].y=SQuadList[index].vc[1];\r\n    VertexList[SQuadList[index].VerCidx].z=SQuadList[index].vc[2];\r\n\r\n    VertexList[SQuadList[index].VerDidx].x=SQuadList[index].vd[0];\r\n    VertexList[SQuadList[index].VerDidx].y=SQuadList[index].vd[1];\r\n    VertexList[SQuadList[index].VerDidx].z=SQuadList[index].vd[2];\r\n\r\n\r\n    for(let i=0;i<VertexList[Squad.VerAidx].subquadid_list.length;i++){//遍历这个顶点影响到的所有的subsquad\r\n        var squadIdx=VertexList[Squad.VerAidx].subquadid_list[i];\r\n        var influencedSquad=SQuadList[squadIdx];\r\n        SQuadList[squadIdx].va=[VertexList[influencedSquad.VerAidx].x,VertexList[influencedSquad.VerAidx].y,VertexList[influencedSquad.VerAidx].z];\r\n        SQuadList[squadIdx].vb=[VertexList[influencedSquad.VerBidx].x,VertexList[influencedSquad.VerBidx].y,VertexList[influencedSquad.VerBidx].z];\r\n        SQuadList[squadIdx].vc=[VertexList[influencedSquad.VerCidx].x,VertexList[influencedSquad.VerCidx].y,VertexList[influencedSquad.VerCidx].z];\r\n        SQuadList[squadIdx].vd=[VertexList[influencedSquad.VerDidx].x,VertexList[influencedSquad.VerDidx].y,VertexList[influencedSquad.VerDidx].z];\r\n    }\r\n\r\n    for(let i=0;i<VertexList[Squad.VerBidx].subquadid_list.length;i++){//遍历这个顶点影响到的所有的subsquad\r\n        var squadIdx=VertexList[Squad.VerBidx].subquadid_list[i];\r\n        var influencedSquad=SQuadList[squadIdx];\r\n        SQuadList[squadIdx].va=[VertexList[influencedSquad.VerAidx].x,VertexList[influencedSquad.VerAidx].y,VertexList[influencedSquad.VerAidx].z];\r\n        SQuadList[squadIdx].vb=[VertexList[influencedSquad.VerBidx].x,VertexList[influencedSquad.VerBidx].y,VertexList[influencedSquad.VerBidx].z];\r\n        SQuadList[squadIdx].vc=[VertexList[influencedSquad.VerCidx].x,VertexList[influencedSquad.VerCidx].y,VertexList[influencedSquad.VerCidx].z];\r\n        SQuadList[squadIdx].vd=[VertexList[influencedSquad.VerDidx].x,VertexList[influencedSquad.VerDidx].y,VertexList[influencedSquad.VerDidx].z];\r\n    }\r\n    for(let i=0;i<VertexList[Squad.VerCidx].subquadid_list.length;i++){//遍历这个顶点影响到的所有的subsquad\r\n        var squadIdx=VertexList[Squad.VerCidx].subquadid_list[i];\r\n        var influencedSquad=SQuadList[squadIdx];\r\n        SQuadList[squadIdx].va=[VertexList[influencedSquad.VerAidx].x,VertexList[influencedSquad.VerAidx].y,VertexList[influencedSquad.VerAidx].z];\r\n        SQuadList[squadIdx].vb=[VertexList[influencedSquad.VerBidx].x,VertexList[influencedSquad.VerBidx].y,VertexList[influencedSquad.VerBidx].z];\r\n        SQuadList[squadIdx].vc=[VertexList[influencedSquad.VerCidx].x,VertexList[influencedSquad.VerCidx].y,VertexList[influencedSquad.VerCidx].z];\r\n        SQuadList[squadIdx].vd=[VertexList[influencedSquad.VerDidx].x,VertexList[influencedSquad.VerDidx].y,VertexList[influencedSquad.VerDidx].z];\r\n    }\r\n    for(let i=0;i<VertexList[Squad.VerDidx].subquadid_list.length;i++){//遍历这个顶点影响到的所有的subsquad\r\n        var squadIdx=VertexList[Squad.VerDidx].subquadid_list[i];\r\n        var influencedSquad=SQuadList[squadIdx];\r\n        SQuadList[squadIdx].va=[VertexList[influencedSquad.VerAidx].x,VertexList[influencedSquad.VerAidx].y,VertexList[influencedSquad.VerAidx].z];\r\n        SQuadList[squadIdx].vb=[VertexList[influencedSquad.VerBidx].x,VertexList[influencedSquad.VerBidx].y,VertexList[influencedSquad.VerBidx].z];\r\n        SQuadList[squadIdx].vc=[VertexList[influencedSquad.VerCidx].x,VertexList[influencedSquad.VerCidx].y,VertexList[influencedSquad.VerCidx].z];\r\n        SQuadList[squadIdx].vd=[VertexList[influencedSquad.VerDidx].x,VertexList[influencedSquad.VerDidx].y,VertexList[influencedSquad.VerDidx].z];\r\n    }\r\n}","import {HexCubeCoord,HexCoordList,CubeRing} from './HexCubeCoord.js';\r\nimport {Edge,IsEdgeExist} from './Edge.js';\r\nimport { SubQuad } from './SubQuad.js';\r\n//import scene from './index.js';\r\nimport * as THREE from 'three';\r\nimport { Quad } from './Quad.js';\r\nexport class Triangle{\r\n    squadlist=[];\r\n    constructor(va,vb,vc){\r\n        this.va=va;\r\n        this.vb=vb;\r\n        this.vc=vc;\r\n        this.mid_ac=[(va[0]+vc[0])/2,(va[1]+vc[1])/2,(va[2]+vc[2])/2];\r\n        this.mid_ab=[(va[0]+vb[0])/2,(va[1]+vb[1])/2,(va[2]+vb[2])/2];\r\n        this.mid_bc=[(vb[0]+vc[0])/2,(vb[1]+vc[1])/2,(vb[2]+vc[2])/2];\r\n        this.center=[(va[0]+vb[0]+vc[0])/3,(va[1]+vb[1]+vc[1])/3,(va[2]+vb[2]+vc[2])/3];\r\n        var squad_a=new SubQuad(this.va,this.mid_ab,this.center,this.mid_ac);\r\n        var squad_b=new SubQuad(this.vb,this.mid_bc,this.center,this.mid_ab);\r\n        var squad_c=new SubQuad(this.vc,this.mid_ac,this.center,this.mid_bc);\r\n        this.squadlist.push(squad_a);\r\n        this.squadlist.push(squad_b);\r\n        this.squadlist.push(squad_c);\r\n    }\r\n}\r\nexport function TriangleList(hexPan){\r\n    //输入：所有的顶点\r\n    //triangle1：一个内圈两个外圈\r\n    //triangle2：两个内圈一个外圈\r\n    var triangleList=[];\r\n    for(let i=0;i<hexPan.length-1;i++){\r\n        if(i==0){\r\n            //只画triangle1\r\n            for(let j=0;j<hexPan[i+1].length;j++){\r\n                var center=new HexCubeCoord(0,0,0);\r\n                var drawtri=new Triangle(\r\n                    center.worldPosition,\r\n                    hexPan[i+1][j].worldPosition,\r\n                    hexPan[i+1][(j+1)%hexPan[i+1].length].worldPosition);\r\n                triangleList.push(drawtri);\r\n            }\r\n        }\r\n        else if(i>0){\r\n            //内圈 hexPan[i]\r\n            for(let j=0;j<hexPan[i+1].length;j++){\r\n                var edge = Math.floor(j/(i+1));//判断这个点在哪一条边\r\n                // console.log(i,j);\r\n                //console.log(i,edge*i+j%(i+1));\r\n                //triangle1\r\n                var drawtri1=new Triangle(\r\n                    hexPan[i][(edge*i+j%(i+1))%hexPan[i].length].worldPosition,\r\n                    hexPan[i+1][j].worldPosition,\r\n                    hexPan[i+1][(j+1)%hexPan[i+1].length].worldPosition);\r\n                triangleList.push(drawtri1);\r\n            }\r\n            for(let k=0;k<hexPan[i].length;k++){\r\n                //triangle2\r\n                var edge = Math.floor(k/i);//判断这个点在哪一条边\r\n                var drawtri2=new Triangle(\r\n                    hexPan[i][k].worldPosition,\r\n                    hexPan[i+1][k+edge+1].worldPosition,\r\n                    hexPan[i][(k+1)%hexPan[i].length].worldPosition);\r\n                triangleList.push(drawtri2);\r\n            }\r\n        }\r\n    }\r\n    return triangleList;\r\n}\r\n\r\nexport function PanTriangleList(hexPan){\r\n\r\n}\r\n//find neighbor\r\n//输入所有的三角形，随机选择一个三角形开始，遍历所有的三角形，找到和他只有两个共同点的三角形\r\n//输出最开始选择的三角形以及所有的邻居\r\nexport function FindNeighbor(SelectTriangle,AllTriangles){\r\n    //random 选一个作为开始\r\n    //var StartIdx=3;\r\n    var Neighbors=[];\r\n    var NeighborsIdx=[];\r\n    var mTriangle=SelectTriangle;//随机选择的三角形\r\n    for(let i=0;i<AllTriangles.length;i++){\r\n        //他其实是要储存这个neighbor的id的\r\n        const set1=[JSON.stringify(mTriangle.va),JSON.stringify(mTriangle.vb),JSON.stringify(mTriangle.vc)];\r\n        const set2=[JSON.stringify(AllTriangles[i].va),JSON.stringify(AllTriangles[i].vb),JSON.stringify(AllTriangles[i].vc)];\r\n        var count=0;\r\n        for(let j=0;j<set1.length;j++){\r\n            if(set2.includes(set1[j])){\r\n                count=count+1;\r\n            }\r\n        }\r\n        if(count==2){\r\n            //console.log(count);\r\n            Neighbors.push(AllTriangles[i]);\r\n            NeighborsIdx.push(i);\r\n        }\r\n    }\r\n    return NeighborsIdx;\r\n}\r\n\r\nvar test_set=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\r\nexport function Merge(AllTriangles,QuadList,leftTriangle){\r\n    //console.log(\"MergeQuad\");\r\n    //console.log(\"\",AllTriangles.length);\r\n    var NeighborsIds=[];\r\n    var StartIdx=Math.floor(Math.random() * AllTriangles.length);\r\n    var SelectTriangle=AllTriangles[StartIdx];\r\n    NeighborsIds=FindNeighbor(SelectTriangle,AllTriangles);\r\n    //console.log(\"MergeQuad\",NeighborsIds.length);\r\n    while(NeighborsIds.length==0&&AllTriangles.length>0){\r\n        //return null;\r\n        //console.log(\"change to next\");\r\n        //如果现在选的这个没有邻居了,但是其他的可能还有邻居，遍历其他的\r\n        leftTriangle.push(AllTriangles[StartIdx]);\r\n        AllTriangles.splice(StartIdx,1);\r\n        StartIdx=Math.floor(Math.random() * AllTriangles.length);\r\n        SelectTriangle=AllTriangles[StartIdx];\r\n        NeighborsIds=FindNeighbor(SelectTriangle,AllTriangles);\r\n    }\r\n    if(AllTriangles.length>1){\r\n        var SelectNeigborId=Math.floor(Math.random() * NeighborsIds.length);\r\n        //console.log(\"selection\",StartIdx,\"options\",NeighborsIds,\"neighbor\",NeighborsIds[SelectNeigborId]);\r\n        //console.log(\"options\",SelectNeigborId,NeighborsIds[SelectNeigborId]);\r\n        var SelectNeighborTriangle=AllTriangles[NeighborsIds[SelectNeigborId]];\r\n        var MergedQuad=CreateQuad(SelectTriangle,SelectNeighborTriangle);\r\n        QuadList.push(MergedQuad);\r\n        //先删除大的，再删除小的\r\n        if(StartIdx>NeighborsIds[SelectNeigborId]-1){\r\n            AllTriangles.splice(StartIdx,1);\r\n            AllTriangles.splice(NeighborsIds[SelectNeigborId],1);\r\n            test_set.splice(StartIdx,1);\r\n            test_set.splice(NeighborsIds[SelectNeigborId],1);\r\n        }\r\n        else{\r\n            AllTriangles.splice(NeighborsIds[SelectNeigborId],1);\r\n            AllTriangles.splice(StartIdx,1);\r\n            test_set.splice(NeighborsIds[SelectNeigborId],1);\r\n            test_set.splice(StartIdx,1);\r\n        }\r\n        //console.log(test_set);\r\n        if(AllTriangles.length>0){Merge(AllTriangles,QuadList,leftTriangle);}}\r\n}\r\n\r\nfunction CreateQuad(tri1,tri2){\r\n    // console.log(\"CreateQuad\");\r\n    var shared=[];\r\n    var isolated=[];\r\n    const vert1=[tri1.va,tri1.vb,tri1.vc];\r\n    const vert2=[tri2.va,tri2.vb,tri2.vc];\r\n    const set1=[JSON.stringify(tri1.va),JSON.stringify(tri1.vb),JSON.stringify(tri1.vc)];\r\n    const set2=[JSON.stringify(tri2.va),JSON.stringify(tri2.vb),JSON.stringify(tri2.vc)];\r\n    //console.log(set1,set2);\r\n\r\n    while(set1.length>0){\r\n        if(set2.includes(set1[0])){\r\n            var idx2=set2.indexOf(set1[0]);\r\n            shared.push(vert1[0]);\r\n            vert1.splice(0,1);\r\n            set1.splice(0,1);\r\n            vert2.splice(idx2,1);\r\n            set2.splice(idx2,1);\r\n        }\r\n        else{//如果没在另一个三角形里\r\n            isolated.push(vert1[0]);\r\n            vert1.splice(0,1);\r\n            set1.splice(0,1);\r\n        }\r\n    }\r\n    isolated.push(vert2[0]);\r\n    //console.log(isolated[0],shared[0],isolated[1],shared[1]);\r\n    var MergedQuad=new Quad(isolated[0],shared[0],isolated[1],shared[1]);\r\n    return MergedQuad;\r\n}\r\n\r\nexport function DrawTriangle(tri,col,scene,meshlist){\r\n    console.log(\"DrawTriangle\");\r\n    const vertices = [\r\n        tri.vc[0],tri.vc[1],tri.vc[2],   // 第一个顶点的坐标\r\n        tri.vb[0],tri.vb[1],tri.vb[2],    // 第二个顶点的坐标\r\n        tri.va[0],tri.va[1],tri.va[2]      // 第三个顶点的坐标\r\n      ];\r\n    // 创建缓冲区几何体\r\n    const geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n    // 创建材质和网格\r\n    const material = new THREE.MeshBasicMaterial({ color: col });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    meshlist.push(mesh);\r\n    // 将网格添加到场景中\r\n    scene.add(mesh);\r\n}\r\n"]}