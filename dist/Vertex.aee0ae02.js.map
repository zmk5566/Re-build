{"version":3,"sources":["src/HexCubeCoord.js","src/Vertex.js"],"names":["HexCubeCoord","q","r","s","worldPosition","subsquad_list","factor","world_position","Array","Math","sqrt","center","cube_direction_vectors","CubeDirection","direction","CubeAdd","hex","dir","CubeNeighbor","CubeScale","CubeRing","radius","results","console","log","push","i","j","HexCoordList","result","Vertex","x","y","z","type","subquadlist","subquadid_list","MarchVertex","layer","IsActive"],"mappings":";;;;;;;ACAA;;;;;;;;;;ADAA;AACA;IACaA;EACT;EACqB;EACrB,sBAAYC,CAAZ,EAAcC,CAAd,EAAgBC,CAAhB,EAAkB;IAAA;;IACd;IACA,KAAKF,CAAL,GAAOA,CAAP;IACA,KAAKC,CAAL,GAAOA,CAAP;IACA,KAAKC,CAAL,GAAOA,CAAP;IACA,KAAKC,aAAL,GAAmB,KAAKA,aAAL,CAAmBH,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,CAAnB;IACA,KAAKE,aAAL,GAAmB,EAAnB;EACH;;ICXQyB,mCAGT,gBAAYC,CAAZ,EAAcC,CAAd,EAAgBC,CAAhB,EAAkBC,IAAlB,EAAwB;EAAA;WDSxB,uBAAcjC,CAAd,EAAgBC,CAAhB,EAAkBC,CAAlB,EAAoB;ECTI,IDUpB,iCCZQ,EAEY;MDWpB,IAAIG,MAAM,GAAC,CAAX;ECXoB,IDYpB,IAAIC,cAAc,GAAC,IAAIC,KAAJ,CAAWP,CAAC,GAACQ,CCbrB,EACS,CDYgB,CAACC,IAAL,CAAU,CAAV,CAAF,GAAe,CAAhB,GAAmBJ,MAA7B,EAAqC,CAArC,EAAwC,CAAC,CAACJ,CAAD,GAAID,CAAC,GAAC,CAAP,IAAWK,MAAnD,CAAnB,CAHgB,CAIhB;;ECZA,IDaA,CCbKyB,CAAL,GAAOA,CAAP,CDaOxB,cAAP;ECZA,EDaH,GCbQyB,CAAL,GAAOA,CAAP;EACA,KAAKC,CAAL,GAAOA,CAAP;EACA,KAAKC,IAAL,GAAUA,IAAV;EACA,KAAKC,WAAL,GAAiB,EAAjB;EACA,KAAKC,cAAL,GAAoB,EAApB;AACD;;;gBDTMpC;ICYAqC;ADOb,IAAI1B,MAAM,GAAC,IAAIX,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,CAAX,EACA;;AACA,IAAIY,sBAAsB,GAAC,CACvB,IAAIZ,YAAJ,CAAiB,CAAC,CAAlB,EAAoB,CAApB,EAAsB,CAAC,CAAvB,CADuB,EAEvB,IAAIA,YAAJ,CAAiB,CAAC,CAAlB,EAAoB,CAAC,CAArB,EAAuB,CAAvB,CAFuB,EAGvB,IAAIA,YAAJ,CAAiB,CAAjB,EAAmB,CAAC,CAApB,EAAsB,CAAC,CAAvB,CAHuB,EAIvB,IAAIA,YAAJ,CAAiB,CAAC,CAAlB,EAAoB,CAApB,EAAsB,CAAC,CAAvB,CAJuB,EAKvB,IAAIA,YAAJ,CAAiB,CAAC,CAAlB,EAAoB,CAAC,CAArB,EAAuB,CAAvB,CALuB,EAMvB,IAAIA,YAAJ,CAAiB,CAAjB,EAAmB,CAAC,CAApB,EAAsB,CAAC,CAAvB,CANuB,CAA3B,EAQA;;AACA,ECjBI,ODiBKa,aAAT,CAAuBC,ACjBPiB,CAAZ,EAAcC,CAAd,EAAgBC,CAAhB,EDiBJ,ACjBsBC,EDiBW,ECjB7B,EAAuBI,KAAvB,EAA6BC,QAA7B,EAAsC;EDkBtC,EClBsC,KDkB/B3B,sBAAsB,CAACE,SAAD,CAA7B;AACH,EACD;ICpB0C;;ADqB1C,ICpBM,KDoBGC,OAAT,CAAiBC,GAAjB,EAAqBC,GAArB,EAAyB,GCpBbc,CAAN,EAAQC,CAAR,EAAUC,CAAV,EAAYC,IAAZ;EDqBF,ECpBE,MAAKI,KAAL,GAAWA,KAAX;EDqBF,ECpBE,KDoBK,CCpBAC,GDoBIvC,KCpBT,GAAcuC,IDoBT,CAAiBvB,GAAG,ACpBzB,CDoB0Bf,CAAJ,GAAQgB,GAAG,CAAChB,CAA7B,EAAgCe,GAAG,CAACd,CAAJ,GAAQe,GAAG,CAACf,CAA5C,EAA+Cc,GAAG,CAACb,CAAJ,GAAQc,GAAG,CAACd,CAA3D,CAAP;AACH,EACD,ECzB0C;EAIrC;;ADsBL,SAASe,YAAT,CAAsBF,GAAtB,EAA0BF,SAA1B,EAAoC;EAChC,AC5B6BgB,OD4BtBf,OAAO,CAACC,GAAD,EAAKH,aAAa,CAACC,SAAD,CAAlB,CAAd;AACH,EACD;;;AACA,SAASK,SAAT,CAAmBF,GAAnB,EAAuBX,MAAvB,EAA8B;EAC1B,OAAO,IAAIN,YAAJ,CAAiBiB,GAAG,CAAChB,CAAJ,GAAMK,MAAvB,EAA8BW,GAAG,CAACf,CAAJ,GAAMI,MAApC,EAA2CW,GAAG,CAACd,CAAJ,GAAMG,MAAjD,CAAP;AACH,EACD;AACA;;;AACO,SAASc,QAAT,CAAkBT,MAAlB,EAAyBU,MAAzB,EAAgC;EACnC,IAAIC,OAAO,GAAC,EAAZ;;EACA,IAAGD,MAAM,IAAE,CAAX,EAAa;IACTE,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAF,OAAO,CAACG,IAAR,CAAa,IAAIzB,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,CAAb;EACH,CAHD,MAII;IACA;IACA;IACA;IACA;IACA,IAAIgB,GAAG,GAACD,OAAO,CAACJ,MAAD,EAASQ,SAAS,CAACN,aAAa,CAAC,CAAD,CAAd,EAAkBQ,MAAlB,CAAlB,CAAf;;IACA,KAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;MAChB,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,MAAd,EAAqBM,CAAC,EAAtB,EAAyB;QACrB;QACAL,OAAO,CAACG,IAAR,CAAaT,GAAb;QACAA,GAAG,GAACE,YAAY,CAACF,GAAD,EAAKU,CAAL,CAAhB;MACH;IACJ;EACJ,CAnBkC,CAoBnC;;;EACA,OAAOJ,OAAP;AACH,EACD;;;AACO,SAASM,YAAT,CAAsBP,MAAtB,EAA6B;EAChC,IAAIQ,MAAM,GAAC,EAAX;;EACA,KAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEL,MAAf,EAAsBK,CAAC,EAAvB,EAA0B;IACtBG,MAAM,CAACJ,IAAP,CAAYL,QAAQ,CAACT,MAAD,EAAQe,CAAR,CAApB;EACH;;EACD,OAAOG,MAAP;AACH","file":"Vertex.aee0ae02.js","sourceRoot":"..","sourcesContent":["//TODO:\r\n//创建六边形cube coordinate坐标\r\nexport class HexCubeCoord{\r\n    //一个六边形\r\n    static worldPosition;//世界坐标\r\n    constructor(q,r,s){\r\n        //六边形的HexCube坐标+它的世界坐标\r\n        this.q=q;\r\n        this.r=r;\r\n        this.s=s;\r\n        this.worldPosition=this.worldPosition(q,r,s);\r\n        this.subsquad_list=[];\r\n    };\r\n    worldPosition(q,r,s){\r\n        //这个六边形的中心点\r\n        var factor=2;\r\n        var world_position=new Array((q*Math.sqrt(3)/2)*factor, 0, (-r-(q/2))*factor);\r\n        //console.log(\"world position\",world_position[0],world_position[1],world_position[2]);\r\n        return world_position;\r\n    }\r\n}\r\nvar center=new HexCubeCoord(0,0,0);\r\n//六边形移动方向\r\nvar cube_direction_vectors=[\r\n    new HexCubeCoord(+1,0,-1),\r\n    new HexCubeCoord(+1,-1,0),\r\n    new HexCubeCoord(0,-1,+1),\r\n    new HexCubeCoord(-1,0,+1),\r\n    new HexCubeCoord(-1,+1,0),\r\n    new HexCubeCoord(0,+1,-1)\r\n];\r\n//返回一个方向\r\nfunction CubeDirection(direction){\r\n    return cube_direction_vectors[direction];\r\n}\r\n//定义Add方法\r\nfunction CubeAdd(hex,dir){\r\n    //console.log(dir.q,dir.r,dir.s);\r\n    return new HexCubeCoord(hex.q + dir.q, hex.r + dir.r, hex.s + dir.s);\r\n}\r\n//返回一个六边形HexCoord：按方向移动\r\nfunction CubeNeighbor(hex,direction){\r\n    return CubeAdd(hex,CubeDirection(direction));\r\n}\r\n//定义Scale方法\r\nfunction CubeScale(dir,factor){\r\n    return new HexCubeCoord(dir.q*factor,dir.r*factor,dir.s*factor);\r\n}\r\n//Single Ring\r\n//返回一个六边形list：一个半径为Radius的六边形环\r\nexport function CubeRing(center,radius){\r\n    var results=[];\r\n    if(radius==0){\r\n        console.log(\"radius is 0\");\r\n        results.push(new HexCubeCoord(0,0,0));\r\n    }\r\n    else{\r\n        //console.log(\"genterating single ring of radius \",radius);\r\n        // var hex=new HexCubeCoord(center.q + CubeScale(CubeDirection(4),radius).q, \r\n        // center.r + CubeScale(CubeDirection(4),radius).r, \r\n        // center.s + CubeScale(CubeDirection(4),radius).s);\r\n        var hex=CubeAdd(center,(CubeScale(CubeDirection(4),radius)));\r\n        for(let i=0;i<6;i++){\r\n            for(let j=0;j<radius;j++){\r\n                //console.log(\"world position\",hex.worldPosition[0],hex.worldPosition[1],hex.worldPosition[2]);\r\n                results.push(hex);\r\n                hex=CubeNeighbor(hex,i);\r\n            }\r\n        }\r\n    }\r\n    //console.log(results.length);\r\n    return results;\r\n}\r\n//返回一个六边形list：一个半径为radius的六边形饼\r\nexport function HexCoordList(radius){\r\n    var result=[];\r\n    for(let i=0;i<=radius;i++){\r\n        result.push(CubeRing(center,i));\r\n    }\r\n    return result;\r\n}","import { HexCubeCoord } from \"./HexCubeCoord\";\r\nexport class Vertex{\r\n    subquadlist=[];\r\n    subquadid_list=[];\r\n    constructor(x,y,z,type) {\r\n        this.x=x;\r\n        this.y=y;\r\n        this.z=z;\r\n        this.type=type;\r\n        this.subquadlist=[];\r\n        this.subquadid_list=[];\r\n      }\r\n}\r\n\r\nexport class MarchVertex extends Vertex{\r\n    constructor(x,y,z,type,layer,IsActive){\r\n      super(x,y,z,type);\r\n      this.layer=layer;\r\n      this.IsActive=IsActive;\r\n    }\r\n}\r\n"]}