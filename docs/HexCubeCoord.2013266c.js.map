{"version":3,"sources":["src/HexCubeCoord.js"],"names":["HexCubeCoord","exports","q","r","s","_classCallCheck","worldPosition","subsquad_list","_createClass","key","value","factor","world_position","Array","Math","sqrt","_defineProperty","center","cube_direction_vectors","CubeDirection","direction","CubeAdd","hex","dir","CubeNeighbor","CubeScale","CubeRing","radius","results","console","log","push","i","j","HexCoordList","result"],"mappings":"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","file":"HexCubeCoord.2013266c.js","sourceRoot":"..","sourcesContent":["//TODO:\n//创建六边形cube coordinate坐标\nexport class HexCubeCoord{\n    //一个六边形\n    static worldPosition;//世界坐标\n    constructor(q,r,s){\n        //六边形的HexCube坐标+它的世界坐标\n        this.q=q;\n        this.r=r;\n        this.s=s;\n        this.worldPosition=this.worldPosition(q,r,s);\n        this.subsquad_list=[];\n    };\n    worldPosition(q,r,s){\n        //这个六边形的中心点\n        var factor=2;\n        var world_position=new Array((q*Math.sqrt(3)/2)*factor, 0, (-r-(q/2))*factor);\n        //console.log(\"world position\",world_position[0],world_position[1],world_position[2]);\n        return world_position;\n    }\n}\nvar center=new HexCubeCoord(0,0,0);\n//六边形移动方向\nvar cube_direction_vectors=[\n    new HexCubeCoord(+1,0,-1),\n    new HexCubeCoord(+1,-1,0),\n    new HexCubeCoord(0,-1,+1),\n    new HexCubeCoord(-1,0,+1),\n    new HexCubeCoord(-1,+1,0),\n    new HexCubeCoord(0,+1,-1)\n];\n//返回一个方向\nfunction CubeDirection(direction){\n    return cube_direction_vectors[direction];\n}\n//定义Add方法\nfunction CubeAdd(hex,dir){\n    //console.log(dir.q,dir.r,dir.s);\n    return new HexCubeCoord(hex.q + dir.q, hex.r + dir.r, hex.s + dir.s);\n}\n//返回一个六边形HexCoord：按方向移动\nfunction CubeNeighbor(hex,direction){\n    return CubeAdd(hex,CubeDirection(direction));\n}\n//定义Scale方法\nfunction CubeScale(dir,factor){\n    return new HexCubeCoord(dir.q*factor,dir.r*factor,dir.s*factor);\n}\n//Single Ring\n//返回一个六边形list：一个半径为Radius的六边形环\nexport function CubeRing(center,radius){\n    var results=[];\n    if(radius==0){\n        console.log(\"radius is 0\");\n        results.push(new HexCubeCoord(0,0,0));\n    }\n    else{\n        //console.log(\"genterating single ring of radius \",radius);\n        // var hex=new HexCubeCoord(center.q + CubeScale(CubeDirection(4),radius).q, \n        // center.r + CubeScale(CubeDirection(4),radius).r, \n        // center.s + CubeScale(CubeDirection(4),radius).s);\n        var hex=CubeAdd(center,(CubeScale(CubeDirection(4),radius)));\n        for(let i=0;i<6;i++){\n            for(let j=0;j<radius;j++){\n                //console.log(\"world position\",hex.worldPosition[0],hex.worldPosition[1],hex.worldPosition[2]);\n                results.push(hex);\n                hex=CubeNeighbor(hex,i);\n            }\n        }\n    }\n    //console.log(results.length);\n    return results;\n}\n//返回一个六边形list：一个半径为radius的六边形饼\nexport function HexCoordList(radius){\n    var result=[];\n    for(let i=0;i<=radius;i++){\n        result.push(CubeRing(center,i));\n    }\n    return result;\n}"]}